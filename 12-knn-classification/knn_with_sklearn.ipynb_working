{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<img src=\"http://imgur.com/1ZcRyrc.png\" style=\"float: left; margin: 20px; height: 55px\">\n",
    "\n",
    "#  K-Nearest Neighbors with `scikit-learn`\n",
    "\n",
    "_Authors: Alex Sherman (DC)_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"learning-objectives\"></a>\n",
    "## Learning Objectives\n",
    "\n",
    "1. Utilize the KNN model on the iris data set.\n",
    "2. Implement scikit-learn's KNN model.\n",
    "3. Assess the fit of a KNN Model using scikit-learn."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "### Lesson Guide\n",
    "- [Learning Objectives](#learning-objectives)\n",
    "- [Overview of the Iris Data Set](#overview-of-the-iris-dataset)\n",
    "\t- [Terminology](#terminology)\n",
    "- [Exercise: \"Human Learning\" With Iris Data](#exercise-human-learning-with-iris-data)\n",
    "- [Human Learning on the Iris Data Set](#human-learning-on-the-iris-dataset)\n",
    "- [K-Nearest Neighbors (KNN) Classification](#k-nearest-neighbors-knn-classification)\n",
    "\t- [Using the Train/Test Split Procedure (K=1)](#using-the-traintest-split-procedure-k)\n",
    "- [Tuning a KNN Model](#tuning-a-knn-model)\n",
    "\t- [What Happens If We View the Accuracy of our Training Data?](#what-happen-if-we-view-the-accuracy-of-our-training-data)\n",
    "\t- [Training Error Versus Testing Error](#training-error-versus-testing-error)\n",
    "- [Standardizing Features](#standardizing-features)\n",
    "\t- [Use `StandardScaler` to Standardize our Data](#use-standardscaler-to-standardize-our-data)\n",
    "- [Comparing KNN With Other Models](#comparing-knn-with-other-models)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "In this lesson, we will get an intuitive and practical feel for the **k-Nearest Neighbors** model. kNN is a **non-parametric model**. So, the model is not represented as an equation with parameters (e.g. the $\\beta$ values in linear regression).\n",
    "\n",
    "First, we will make a model by hand to classify iris flower data. Next, we will automatedly make a model using kNN.\n",
    "\n",
    "> You may have heard of the clustering algorithm **k-Means Clustering**. These techniques have nothing in common, aside from both having a parameter k!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"overview-of-the-iris-dataset\"></a>\n",
    "## Overview of the Iris Data Set\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Read the iris data into a DataFrame.\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "data = 'data/iris.data'\n",
    "iris = pd.read_csv(data)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {
    "collapsed": false,
=======
   "execution_count": 2,
   "metadata": {
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
<<<<<<< HEAD
   "outputs": [],
=======
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sepal_length  sepal_width  petal_length  petal_width      species\n",
       "0           5.1          3.5           1.4          0.2  Iris-setosa\n",
       "1           4.9          3.0           1.4          0.2  Iris-setosa\n",
       "2           4.7          3.2           1.3          0.2  Iris-setosa\n",
       "3           4.6          3.1           1.5          0.2  Iris-setosa\n",
       "4           5.0          3.6           1.4          0.2  Iris-setosa"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   "source": [
    "iris.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"terminology\"></a>\n",
    "### Terminology\n",
    "\n",
    "- **150 observations** (n=150): Each observation is one iris flower.\n",
    "- **Four features** (p=4): sepal length, sepal width, petal length, and petal width.\n",
    "- **Response**: iris species.\n",
    "- **Classification problem** because response is categorical."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"exercise-human-learning-with-iris-data\"></a>\n",
    "## Exercise: \"Human Learning\" With Iris Data\n",
    "\n",
    "* **20 min **\n",
    "\n",
    "**Question:** Can you predict the species of an iris using petal and sepal measurements?\n",
    "\n",
    "1. Read the iris data into a Pandas DataFrame, including column names.\n",
    "2. Gather some basic information about the data.\n",
    "3. Use sorting, split-apply-combine, and/or visualization to look for differences between species.\n",
    "4. Write down a set of rules that could be used to predict species based on iris measurements.\n",
    "\n",
    "**BONUS:** Define a function that accepts a row of data and returns a predicted species. Then, use that function to make predictions for all existing rows of data and check the accuracy of your predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Display plots in the notebook.\n",
    "%matplotlib inline\n",
    "plt.style.use('fivethirtyeight')\n",
    "\n",
    "# Increase default figure and font sizes for easier viewing.\n",
    "plt.rcParams['figure.figsize'] = (8, 6)\n",
    "plt.rcParams['font.size'] = 14"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Read the iris data into a pandas DataFrame, including column names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Define the URL from which to retrieve the data (as a string).\n",
    "path = 'data/iris.data'\n",
    "\n",
    "# Retrieve the CSV file and add the column names.\n",
    "iris = pd.read_csv(path)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Gather some basic information about the data."
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {
    "collapsed": false,
=======
   "execution_count": 5,
   "metadata": {
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
<<<<<<< HEAD
   "outputs": [],
=======
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.9</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.4</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.3</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4.4</td>\n",
       "      <td>2.9</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4.3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>5.8</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>5.7</td>\n",
       "      <td>4.4</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.4</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.9</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.4</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.3</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>5.7</td>\n",
       "      <td>3.8</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.3</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.8</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.3</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>5.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.4</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.3</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.5</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.4</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>5.2</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>5.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sepal_length  sepal_width  petal_length  petal_width      species\n",
       "0            5.1          3.5           1.4          0.2  Iris-setosa\n",
       "1            4.9          3.0           1.4          0.2  Iris-setosa\n",
       "2            4.7          3.2           1.3          0.2  Iris-setosa\n",
       "3            4.6          3.1           1.5          0.2  Iris-setosa\n",
       "4            5.0          3.6           1.4          0.2  Iris-setosa\n",
       "5            5.4          3.9           1.7          0.4  Iris-setosa\n",
       "6            4.6          3.4           1.4          0.3  Iris-setosa\n",
       "7            5.0          3.4           1.5          0.2  Iris-setosa\n",
       "8            4.4          2.9           1.4          0.2  Iris-setosa\n",
       "9            4.9          3.1           1.5          0.1  Iris-setosa\n",
       "10           5.4          3.7           1.5          0.2  Iris-setosa\n",
       "11           4.8          3.4           1.6          0.2  Iris-setosa\n",
       "12           4.8          3.0           1.4          0.1  Iris-setosa\n",
       "13           4.3          3.0           1.1          0.1  Iris-setosa\n",
       "14           5.8          4.0           1.2          0.2  Iris-setosa\n",
       "15           5.7          4.4           1.5          0.4  Iris-setosa\n",
       "16           5.4          3.9           1.3          0.4  Iris-setosa\n",
       "17           5.1          3.5           1.4          0.3  Iris-setosa\n",
       "18           5.7          3.8           1.7          0.3  Iris-setosa\n",
       "19           5.1          3.8           1.5          0.3  Iris-setosa\n",
       "20           5.4          3.4           1.7          0.2  Iris-setosa\n",
       "21           5.1          3.7           1.5          0.4  Iris-setosa\n",
       "22           4.6          3.6           1.0          0.2  Iris-setosa\n",
       "23           5.1          3.3           1.7          0.5  Iris-setosa\n",
       "24           4.8          3.4           1.9          0.2  Iris-setosa\n",
       "25           5.0          3.0           1.6          0.2  Iris-setosa\n",
       "26           5.0          3.4           1.6          0.4  Iris-setosa\n",
       "27           5.2          3.5           1.5          0.2  Iris-setosa\n",
       "28           5.2          3.4           1.4          0.2  Iris-setosa\n",
       "29           4.7          3.2           1.6          0.2  Iris-setosa"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   "source": [
    "iris.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
<<<<<<< HEAD
    "collapsed": false,
=======
    "collapsed": true,
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "iris.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
<<<<<<< HEAD
    "collapsed": false,
=======
    "collapsed": true,
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "iris.dtypes"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {
    "collapsed": false,
=======
   "execution_count": 6,
   "metadata": {
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
<<<<<<< HEAD
   "outputs": [],
=======
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>150.000000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>150.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.843333</td>\n",
       "      <td>3.054000</td>\n",
       "      <td>3.758667</td>\n",
       "      <td>1.198667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.828066</td>\n",
       "      <td>0.433594</td>\n",
       "      <td>1.764420</td>\n",
       "      <td>0.763161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.300000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.100000</td>\n",
       "      <td>2.800000</td>\n",
       "      <td>1.600000</td>\n",
       "      <td>0.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.800000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.350000</td>\n",
       "      <td>1.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>6.400000</td>\n",
       "      <td>3.300000</td>\n",
       "      <td>5.100000</td>\n",
       "      <td>1.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>7.900000</td>\n",
       "      <td>4.400000</td>\n",
       "      <td>6.900000</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sepal_length  sepal_width  petal_length  petal_width\n",
       "count    150.000000   150.000000    150.000000   150.000000\n",
       "mean       5.843333     3.054000      3.758667     1.198667\n",
       "std        0.828066     0.433594      1.764420     0.763161\n",
       "min        4.300000     2.000000      1.000000     0.100000\n",
       "25%        5.100000     2.800000      1.600000     0.300000\n",
       "50%        5.800000     3.000000      4.350000     1.300000\n",
       "75%        6.400000     3.300000      5.100000     1.800000\n",
       "max        7.900000     4.400000      6.900000     2.500000"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   "source": [
    "iris.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
<<<<<<< HEAD
    "collapsed": false,
=======
    "collapsed": true,
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "iris.species.value_counts()  # number of each species"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
<<<<<<< HEAD
    "collapsed": false,
=======
    "collapsed": true,
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "iris.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Use sorting, split-apply-combine, and/or visualization to look for differences between species."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "      <th>species_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>5.2</td>\n",
       "      <td>4.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4.3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sepal_length  sepal_width  petal_length  petal_width      species  \\\n",
       "32           5.2          4.1           1.5          0.1  Iris-setosa   \n",
       "13           4.3          3.0           1.1          0.1  Iris-setosa   \n",
       "37           4.9          3.1           1.5          0.1  Iris-setosa   \n",
       "9            4.9          3.1           1.5          0.1  Iris-setosa   \n",
       "12           4.8          3.0           1.4          0.1  Iris-setosa   \n",
       "\n",
       "    species_num  \n",
       "32            0  \n",
       "13            0  \n",
       "37            0  \n",
       "9             0  \n",
       "12            0  "
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sort the DataFrame by petal_width.\n",
    "iris.petal_width.sort_values()\n",
    "iris.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "      <th>species_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>5.2</td>\n",
       "      <td>4.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4.3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sepal_length  sepal_width  petal_length  petal_width      species  \\\n",
       "32           5.2          4.1           1.5          0.1  Iris-setosa   \n",
       "13           4.3          3.0           1.1          0.1  Iris-setosa   \n",
       "37           4.9          3.1           1.5          0.1  Iris-setosa   \n",
       "9            4.9          3.1           1.5          0.1  Iris-setosa   \n",
       "12           4.8          3.0           1.4          0.1  Iris-setosa   \n",
       "\n",
       "    species_num  \n",
       "32            0  \n",
       "13            0  \n",
       "37            0  \n",
       "9             0  \n",
       "12            0  "
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iris.sort_values(by='petal_width', ascending=True, inplace=True)\n",
    "iris.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[5.2, 4.1, 1.5, 0.1, 'Iris-setosa', 0],\n",
       "       [4.3, 3.0, 1.1, 0.1, 'Iris-setosa', 0],\n",
       "       [4.9, 3.1, 1.5, 0.1, 'Iris-setosa', 0],\n",
       "       [4.9, 3.1, 1.5, 0.1, 'Iris-setosa', 0],\n",
       "       [4.8, 3.0, 1.4, 0.1, 'Iris-setosa', 0]], dtype=object)"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
<<<<<<< HEAD
    "# Sort the DataFrame by petal_width and display the NumPy array.\n",
    "# iris[['species', 'petal_width']].sort_values('petal_width')\n",
    "iris.sort_values(by='petal_width', ascending=True).values[0:5]"
=======
    "# Mean of sepal_length, grouped by species.\n",
    "iris.groupby(by='species', axis=0).sepal_length.mean()"
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Split-apply-combine: Explore the data while using a `groupby` on `'species'`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "species\n",
       "Iris-setosa        5.006\n",
       "Iris-versicolor    5.936\n",
       "Iris-virginica     6.588\n",
       "Name: sepal_length, dtype: float64"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Mean of sepal_length, grouped by species\n",
    "iris.groupby(by='species', axis=0).sepal_length.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species_num</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>species</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Iris-setosa</th>\n",
       "      <td>5.006</td>\n",
       "      <td>3.418</td>\n",
       "      <td>1.464</td>\n",
       "      <td>0.244</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iris-versicolor</th>\n",
       "      <td>5.936</td>\n",
       "      <td>2.770</td>\n",
       "      <td>4.260</td>\n",
       "      <td>1.326</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iris-virginica</th>\n",
       "      <td>6.588</td>\n",
       "      <td>2.974</td>\n",
       "      <td>5.552</td>\n",
       "      <td>2.026</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 sepal_length  sepal_width  petal_length  petal_width  \\\n",
       "species                                                                 \n",
       "Iris-setosa             5.006        3.418         1.464        0.244   \n",
       "Iris-versicolor         5.936        2.770         4.260        1.326   \n",
       "Iris-virginica          6.588        2.974         5.552        2.026   \n",
       "\n",
       "                 species_num  \n",
       "species                       \n",
       "Iris-setosa                0  \n",
       "Iris-versicolor            1  \n",
       "Iris-virginica             2  "
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Mean of all numeric columns, grouped by species.\n",
    "iris.groupby(by='species').mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>species</th>\n",
       "      <th>Iris-setosa</th>\n",
       "      <th>Iris-versicolor</th>\n",
       "      <th>Iris-virginica</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">petal_length</th>\n",
       "      <th>count</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.464000</td>\n",
       "      <td>4.260000</td>\n",
       "      <td>5.552000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.173511</td>\n",
       "      <td>0.469911</td>\n",
       "      <td>0.551895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1.400000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5.100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.500000</td>\n",
       "      <td>4.350000</td>\n",
       "      <td>5.550000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.575000</td>\n",
       "      <td>4.600000</td>\n",
       "      <td>5.875000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.900000</td>\n",
       "      <td>5.100000</td>\n",
       "      <td>6.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">petal_width</th>\n",
       "      <th>count</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.244000</td>\n",
       "      <td>1.326000</td>\n",
       "      <td>2.026000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.107210</td>\n",
       "      <td>0.197753</td>\n",
       "      <td>0.274650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.100000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.200000</td>\n",
       "      <td>1.200000</td>\n",
       "      <td>1.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.200000</td>\n",
       "      <td>1.300000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.300000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>2.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.600000</td>\n",
       "      <td>1.800000</td>\n",
       "      <td>2.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">sepal_length</th>\n",
       "      <th>count</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.006000</td>\n",
       "      <td>5.936000</td>\n",
       "      <td>6.588000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.352490</td>\n",
       "      <td>0.516171</td>\n",
       "      <td>0.635880</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.300000</td>\n",
       "      <td>4.900000</td>\n",
       "      <td>4.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.800000</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>6.225000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.900000</td>\n",
       "      <td>6.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>5.200000</td>\n",
       "      <td>6.300000</td>\n",
       "      <td>6.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5.800000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">sepal_width</th>\n",
       "      <th>count</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.418000</td>\n",
       "      <td>2.770000</td>\n",
       "      <td>2.974000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.381024</td>\n",
       "      <td>0.313798</td>\n",
       "      <td>0.322497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.300000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>3.125000</td>\n",
       "      <td>2.525000</td>\n",
       "      <td>2.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3.400000</td>\n",
       "      <td>2.800000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3.675000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.175000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.400000</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>3.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">species_num</th>\n",
       "      <th>count</th>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "species             Iris-setosa  Iris-versicolor  Iris-virginica\n",
       "petal_length count    50.000000        50.000000       50.000000\n",
       "             mean      1.464000         4.260000        5.552000\n",
       "             std       0.173511         0.469911        0.551895\n",
       "             min       1.000000         3.000000        4.500000\n",
       "             25%       1.400000         4.000000        5.100000\n",
       "             50%       1.500000         4.350000        5.550000\n",
       "             75%       1.575000         4.600000        5.875000\n",
       "             max       1.900000         5.100000        6.900000\n",
       "petal_width  count    50.000000        50.000000       50.000000\n",
       "             mean      0.244000         1.326000        2.026000\n",
       "             std       0.107210         0.197753        0.274650\n",
       "             min       0.100000         1.000000        1.400000\n",
       "             25%       0.200000         1.200000        1.800000\n",
       "             50%       0.200000         1.300000        2.000000\n",
       "             75%       0.300000         1.500000        2.300000\n",
       "             max       0.600000         1.800000        2.500000\n",
       "sepal_length count    50.000000        50.000000       50.000000\n",
       "             mean      5.006000         5.936000        6.588000\n",
       "             std       0.352490         0.516171        0.635880\n",
       "             min       4.300000         4.900000        4.900000\n",
       "             25%       4.800000         5.600000        6.225000\n",
       "             50%       5.000000         5.900000        6.500000\n",
       "             75%       5.200000         6.300000        6.900000\n",
       "             max       5.800000         7.000000        7.900000\n",
       "sepal_width  count    50.000000        50.000000       50.000000\n",
       "             mean      3.418000         2.770000        2.974000\n",
       "             std       0.381024         0.313798        0.322497\n",
       "             min       2.300000         2.000000        2.200000\n",
       "             25%       3.125000         2.525000        2.800000\n",
       "             50%       3.400000         2.800000        3.000000\n",
       "             75%       3.675000         3.000000        3.175000\n",
       "             max       4.400000         3.400000        3.800000\n",
       "species_num  count    50.000000        50.000000       50.000000\n",
       "             mean      0.000000         1.000000        2.000000\n",
       "             std       0.000000         0.000000        0.000000\n",
       "             min       0.000000         1.000000        2.000000\n",
       "             25%       0.000000         1.000000        2.000000\n",
       "             50%       0.000000         1.000000        2.000000\n",
       "             75%       0.000000         1.000000        2.000000\n",
       "             max       0.000000         1.000000        2.000000"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# describe() of all numeric columns, grouped by species.\n",
    "iris.groupby(by='species').describe().T.iloc[:20]     # display first 20 rows\n",
    "iris.groupby(by='species').describe().T\n",
    "\n",
    "# see that all features' min to max overlap, so we cannot use any one feature \n",
    "# to accurately categorize or classify the species"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "### Reminder on `boxplot` whiskers:\n",
    "\n",
    "> whis : float, sequence, or string (default = 1.5)\n",
    "\n",
    ">As a float, determines the reach of the whiskers to the beyond the first and third quartiles. In other words, where IQR is the interquartile range (Q3-Q1), the upper whisker will extend to last datum less than Q3 + whis*IQR). Similarly, the lower whisker will extend to the first datum greater than Q1 - whis*IQR. Beyond the whiskers, data are considered outliers and are plotted as individual points. Set this to an unreasonably high value to force the whiskers to show the min and max values. Alternatively, set this to an ascending sequence of percentile (e.g., [5, 95]) to set the whiskers at specific percentiles of the data. Finally, whis can be the string 'range' to force the whiskers to the min and max of the data.\n",
    "\n",
    "[Matplotlib docs](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.box)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x117e6dd10>"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x117d556d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Box plot of petal_width, grouped by species.\n",
    "iris.boxplot(column='petal_width', by='species')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x1178e5490>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x1180eb650>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x118173550>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x1181d9cd0>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x118260bd0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x1182d5290>]], dtype=object)"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11806ab90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Box plot of all numeric columns, grouped by species.\n",
    "iris.boxplot(by='species', rot=45)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "# Map species to a numeric value so that plots can be colored by species (adds a new column)\n",
    "iris['species_num'] = iris.species.map({'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2})\n",
    "\n",
    "# Alternative method:\n",
<<<<<<< HEAD
    "# iris['species_num'] = iris.species.factorize()[0]"
=======
    "iris['species_num'] = iris.species.factorize()[0]"
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 137,
   "metadata": {
    "collapsed": false,
=======
   "execution_count": null,
   "metadata": {
    "collapsed": true,
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
<<<<<<< HEAD
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "      <th>species_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>5.2</td>\n",
       "      <td>4.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>4.3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>4.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Iris-setosa</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    sepal_length  sepal_width  petal_length  petal_width      species  \\\n",
       "32           5.2          4.1           1.5          0.1  Iris-setosa   \n",
       "13           4.3          3.0           1.1          0.1  Iris-setosa   \n",
       "37           4.9          3.1           1.5          0.1  Iris-setosa   \n",
       "9            4.9          3.1           1.5          0.1  Iris-setosa   \n",
       "12           4.8          3.0           1.4          0.1  Iris-setosa   \n",
       "\n",
       "    species_num  \n",
       "32            0  \n",
       "13            0  \n",
       "37            0  \n",
       "9             0  \n",
       "12            0  "
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
=======
   "outputs": [],
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   "source": [
    "iris.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1185beb10>"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11863c650>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatterplot of petal_length vs. petal_width, colored by species.\n",
    "iris.plot(kind=\"scatter\", x='petal_length', y='petal_width', c='species_num', colormap='brg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {
    "collapsed": false,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x1187f7f10>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x1189abad0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118a32cd0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118aa2850>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x118b27990>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118b9b410>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118c1f710>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118c940d0>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x118d182d0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118d73e10>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118e102d0>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118e1e790>],\n",
       "       [<matplotlib.axes._subplots.AxesSubplot object at 0x118f06210>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118f8d190>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x118ff0f50>,\n",
       "        <matplotlib.axes._subplots.AxesSubplot object at 0x119077fd0>]], dtype=object)"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\npw85OTm6zkzl2I7U1FTs7Ox0t7bWpDLH787pu7dPXbS2HJcORyMYP348SqWSXbt2sXfvXlatWkVs\nbCwrV67U7Whvvvkm/v7+Nb6/8v7FulKpVISFhdG+fXvmz5+Pu7s7lpaWXLp0iTlz5jT6AMPK9c2Z\nM4fRo0fXWMbHx0fvf1NT0xrLabXaRo3tYX+W0Gdsue/o6Ii7uzspKSn07duXkpISgoODKSoqorCw\nkLS0NFJTU/H19aVTp04P9Fl1Jfnd/FXm3cqVK3F2dm7QOrKzsxk/fjweHh68/fbbdO3alXbt2nHi\nxAmioqKarF2vz/4p7bqoSUvI//79+2NpaUlKSgoqlYpOnTrh5+fHzZs3Wbp0KTdu3CA1NZWgoKAH\n+pz6aG05Lh2ORuLg4MD06dOZPn06BQUFjBo1iujoaD777DMAOnbsqLsH/X7OnTuHp6en7v/8/HwK\nCgpwdXUFKp4Enp+fz/r163nkkUd05ZKSkhqvQlV0794dqJj6s651uJ9u3boBFVdPqv4ycP36daPt\n3RsrY8t9pVLJnj178PPzw8vLCzs7O+zs7HBxcSE5OZlDhw4xefLkWtdRmd/nzp3Ty+/K+oiWp7bc\nrPxF39bWtsFt5K5duygtLWXTpk26fAea7IGQlTHXZ/+8n27duqHVavnll1/0BsdmZWU1yvqF4bT0\n/G/btq3u9qnCwkICAgIwNTVl8ODBmJmZsXPnTjIyMnj22WdrXU9ljmdlZdGrVy/d8sqrPOLeZAzH\nA1Kr1dUe6qJQKHBzc0OlUuHv74+7uzsrVqzg5s2b1d5/91SxUDEotmoP95NPPgEgNDQU+K1XXLWM\nRqPRG6zVmOzs7AgJCWH9+vU13qtfUx3u53e/+x1mZmasWbNGb/mnn35arWyHDh0A5EStmTHW3Fcq\nleTm5vLVV1/pzVaiVCpZt24dKpXqvrOYDBs2jLZt27JmzZoa61OV5HfLUFtuDh8+nM6dOxMTE1Pt\nVhDQz/V7fd815XZpaWmNbWJjaMj+eT8jRowA0P3YUEna9ZbPGPJfqVRy/PhxkpKSdG24paUl/fv3\nJzY2Fq1We9+2feTIkQC66X0rVZ11q5LkuD65wvGAbt68iY+PD2FhYfj6+mJlZcWhQ4fYvXs3M2fO\nxMTEhA8//JCIiAiCgoKYMmUKLi4uXL58mYMHD6LVaklISNBb56VLl5g4cSKhoaGkp6ezfv16hg8f\nzqOPPgpAUFAQXbp0ITIyktmzZ2NmZtuPE6QAAAS5SURBVMa//vWvanNiN6aYmBhCQ0MZMmQI06ZN\no0ePHuTl5XH48GEyMzM5duxYvdZnb2/Piy++yEcffcSkSZMYNWoU6enpJCYmYmNjozc4zc/PD1NT\nU9577z1UKhWWlpYMHDhQd+VFGIax5n7lAefMmTN6s5UEBwcTHx8P1D6oECp+6Zs7dy4xMTE15ndV\nkt8tw/1y87333mPmzJkMHTqU8PBw7O3tycnJYc+ePfTq1YuPP/4YqLi1AyqeTj9y5EjMzMwYM2YM\nI0aMwNzcnKeffprnnnuOsrIyNm3aVOf73+urIfvn/fj7+/P444+zevVqCgsLGTx4MAcPHuTMmTMA\neu165XZYtGgRERERmJubM3ToUOzs7BqvkqLRGEP+BwcH884775Cdna3XsQgODub999/Hysqq2jM3\n7ubn50dERARr1qyhsLCQwMBADhw4UG3inKp1lRyvIB2OB9S+fXtmzJhBUlIS3377LeXl5bi5uekG\n00LFXPuJiYksX76cNWvWcPPmTd1DbWq6fLdmzRreffddFi9eDMCzzz6rN0WatbU1mzdvZv78+URH\nR9OhQwcef/xxnn/+eb0ZDxqTl5cXSUlJLFu2jE2bNpGfn4+trS2+vr688cYbDVrnwoULsbS05Isv\nvuD7779n4MCBuinkqj7fwN7entjYWGJiYnj55ZdRq9WsWLFCTsgMzFhz393dHUdHR3Jzc6td4YCK\nedTrMvZk/vz5WFhYsHbtWg4cOMDAgQPZunVrtfnaJb9bhvvl5pNPPomjoyMxMTF89NFHlJaW4ujo\nSGBgINOnT9eVCwsLIzIykq1bt+qmYD5x4gSenp7ExcWxaNEioqKisLGx4emnn+aRRx5hwoQJTVKn\n+u6fdfHJJ5/g4OBAfHw8CQkJhISE8PnnnxMQEKDXrvfv35+oqCjWrFnDSy+9hEajYceOHa32ZKy5\nM4b8r7x9yszMjIEDB+qWK5VK3n//fQIDA+vUwfnoo4+wsbFhy5Yt7Nq1i5CQEDZv3kyfPn30ykmO\n62tTUFBgnKNTWqDo6GiWLVtGZmYmDg4Ohg7HIAoKCujevTvz58+vdS5sYVwk90VzJbn54H766SeG\nDh3Kp59+Wq3DLZo3yX/RWGQMhzCYu6c0BXSXXasOCBZCCNEy3KtdNzExue/98UII4yW3VLUit27d\noqioqNYy1tbWmJubP5R4/vnPf/LVV18xevRoOnTowKFDh4iPj2f48OEPdWo6YfyaW+4L0VhUKhUl\nJSW1lrG1tb3nFJyNLTY2luPHjxMSEoKZmRm7d+8mMTGR5557rsbnDgjxIJpb/ot7kw5HK/Lhhx+y\nbNmyWsvs2LGDkJCQhxJPnz59MDMzIzY2Vnfv8Isvvsj8+fMfyueL1qO55b4QjeW1115j48aNtZY5\nceIEbm5uDyWewMBA9u3bx/LlyykqKqJr16689tprcousaBLNLf/FvckYjlYkOzub7OzsWsv4+/vX\n+0nIQjR3kvvCWGVkZJCbm1trmaCgIL0B20IYC8n/lkM6HEIIIYQQQogmI4PGhRBCCCGEEE1GOhxC\nCCGEEEKIJiMdDiGEEEIIIUSTkQ6HEEIIIYQQoslIh0MIIYQQQgjRZP4fq1m9RMDwlvUAAAAASUVO\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x118815390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scatter matrix of all features, colored by species.\n",
    "pd.plotting.scatter_matrix(iris.drop('species_num', axis=1), c=iris.species_num, figsize=(12, 10))\n",
    "\n",
    "# overview to find non-overlapping combination of features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Write down a set of rules that could be used to predict species based on iris measurements."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Feel free to do more analysis if needed to make good rules!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Bonus: Define a function that accepts a row of data and returns a predicted species. Then, use that function to make predictions for all existing rows of data and check the accuracy of your predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "def predict_flower(df):\n",
    "    preds = ['Iris-setosa'] * len(df)   # temporary!\n",
    "    # for each row of df, make a prediction\n",
    "    # you can iterate over the roews and use if/elif/else:\n",
    "    # for ind, row in df.iterrows():        \n",
    "    #    if row['your_column'] < some_value:\n",
    "    #       prediction = 'Iris-setosa'\n",
    "    #    elif/else:\n",
    "    #       ...\n",
    "    #    preds.append(prediction)\n",
    "    # then add a column to the DataFrame with the predictions\n",
    "    df['prediction'] = preds # also need this (before) the alternative\n",
    "    \n",
    "    # alternatively, you could assign 'blockwise' (using several of the following)\n",
    "    # df['prediction'] = preds\n",
    "    # df.loc[(df[df[your_column] > your_value]) & or | \n",
    "    #     (df[your_other_column] < your_other_value)].predictions = 'your_species'\n",
    "    \n",
    "    \n",
    "predict_flower(iris)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "iris.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# 0.3333 means 1/3 are classified correctly\n",
    "\n",
    "sum(iris.species == iris.prediction) / 150."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"human-learning-on-the-iris-dataset\"></a>\n",
    "## Human Learning on the Iris Data Set\n",
    "---\n",
    "\n",
    "How did we (as humans) predict the species of an iris?\n",
    "\n",
    "1. We observed that the different species had (somewhat) dissimilar measurements.\n",
    "2. We focused on features that seemed to correlate with the response.\n",
    "3. We created a set of rules (using those features) to predict the species of an unknown iris.\n",
    "\n",
    "We assumed that if an **unknown iris** had measurements similar to **previous irises**, then its species was most likely the same as those previous irises."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "# Allow plots to appear in the notebook.\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Increase default figure and font sizes for easier viewing.\n",
    "plt.rcParams['figure.figsize'] = (10, 8)\n",
    "plt.rcParams['font.size'] = 14\n",
    "\n",
    "# Create a custom color map.\n",
    "from matplotlib.colors import ListedColormap\n",
    "cmap_bold = ListedColormap(['#FF0000', '#00FF00', '#0000FF'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "# Map each iris species to a number.\n",
    "iris['species_num'] = iris.species.map({'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Box plot of all numeric columns, grouped by species.\n",
    "iris.drop('species_num', axis=1).boxplot(by='species', rot=45);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "# Create a scatterplot of PETAL LENGTH versus PETAL WIDTH and color by SPECIES.\n",
    "iris.plot(kind='scatter', x='petal_length', y='petal_width', c='species_num', colormap=cmap_bold);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "iris['pred_num'] = iris.prediction.map({'Iris-setosa':0, 'Iris-versicolor':1, 'Iris-virginica':2})\n",
    "\n",
    "# Create a scatter plot of PETAL LENGTH versus PETAL WIDTH and color by PREDICTION.\n",
    "iris.plot(kind='scatter', x='petal_length', y='petal_width', c='pred_num', colormap=cmap_bold);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"k-nearest-neighbors-knn-classification\"></a>\n",
    "## K-Nearest Neighbors (KNN) Classification\n",
    "---\n",
    "\n",
    "K-nearest neighbors classification is (as its name implies) a classification model that uses the \"K\" most similar observations in order to make a prediction.\n",
    "\n",
    "KNN is a supervised learning method; therefore, the training data must have known target values.\n",
    "\n",
    "The process of of prediction using KNN is fairly straightforward:\n",
    "\n",
    "1. Pick a value for K.\n",
    "2. Search for the K observations in the data that are \"nearest\" to the measurements of the unknown iris.\n",
    "    - Euclidian distance is often used as the distance metric, but other metrics are allowed.\n",
    "3. Use the most popular response value from the K \"nearest neighbors\" as the predicted response value for the unknown iris."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "The visualizations below show how a given area can change in its prediction as K changes. Colored points represent true values and colored areas represent a **prediction space**. If an unknown point was to fall in a space, its predicted value would be the color of that scace."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"knn-classification-map-for-iris-k\"></a>\n",
    "### KNN Classification Map for Iris (K=1)\n",
    "\n",
    "![1NN classification map](./assets/images/iris_01nn_map.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### KNN Classification Map for Iris (K=5)\n",
    "\n",
    "![5NN classification map](./assets/images/iris_05nn_map.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### KNN Classification Map for Iris (K=15)\n",
    "\n",
    "![15NN classification map](./assets/images/iris_15nn_map.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"knn-classification-map-for-iris-k\"></a>\n",
    "### KNN Classification Map for Iris (K=50)\n",
    "\n",
    "![50NN classification map](./assets/images/iris_50nn_map.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "We can see that, as K increases, ie, more neighbors are allowed to 'vote', the classification spaces' borders become more distinct. However, you can also see that the spaces are not perfectly pure when it comes to the known elements within them.\n",
    "\n",
    "**How are outliers affected by K?** As K increases, outliers are \"smoothed out\". Look at the above three plots and notice how outliers strongly affect the prediction space when K=1. When K=50, outliers no longer affect region boundaries. This is a classic bias-variance tradeoff -- with increasing K, the bias increases but the variance decreases."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "**Question:** What's the \"best\" value for K in this case?\n",
    "\n",
    "**Answer:** ...\n",
    "\n",
    "**Question:** How does 'complexity' show up in the context of the KNN model? In other words - how does overfitting happen?\n",
    "\n",
    "**Answer:** ..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "For the rest of the lesson, we will be using a dataset containing the 2015 season statistics for ~500 NBA players. This dataset leads to a nice choice of K, as we'll see below. Its columns are:\n",
    "\n",
    "\n",
    "| Column | Meaning |\n",
    "| ---    | ---     |\n",
    "| pos | C: Center. F: Front. G: Guard |\n",
    "| ast | | \n",
    "| blk | |\n",
    "| tov | | \n",
    "| pf | |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "# Read the NBA data into a DataFrame.\n",
    "import pandas as pd\n",
    "\n",
    "path = 'data/NBA_players_2015.csv'\n",
    "nba = pd.read_csv(path, index_col=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Map positions to numbers\n",
    "nba['pos_num'] = nba.pos.map({'C':0, 'F':1, 'G':2})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Create feature matrix (X).\n",
    "feature_cols = ['ast', 'stl', 'blk', 'tov', 'pf']\n",
    "X = nba[feature_cols]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Create response vector (y).\n",
    "y = nba.pos_num"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"using-the-traintest-split-procedure-k\"></a>\n",
    "### Using the Train/Test Split Procedure (K=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Step 1: Split X and y into training and testing sets (using `random_state` for reproducibility)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=99)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Step 2: Train the model on the training set (using K=1)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=1, p=2,\n",
       "           weights='uniform')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=1)\n",
    "knn.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "#### Step 3: Test the model on the testing set and check the accuracy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6166666666666667"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred_class = knn.predict(X_test)\n",
    "accuracy_score(y_test, y_pred_class)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Repeating for K=50."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.67500000000000004"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=50)\n",
    "knn.fit(X_train, y_train)\n",
    "y_pred_class = knn.predict(X_test)\n",
    "accuracy_score(y_test, y_pred_class)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "#### Comparing Testing Accuracy With Null Accuracy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Null accuracy is the accuracy that can be achieved by **always predicting the most frequent class**. It is a benchmark against which you may want to measure every classification model."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Examine the class distribution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    60\n",
       "1    49\n",
       "0    11\n",
       "Name: pos_num, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "#### Compute null accuracy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    0.5\n",
       "Name: pos_num, dtype: float64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.value_counts().head(1) / len(y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"tuning-a-knn-model\"></a>\n",
    "## Tuning a KNN Model\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Instantiate the model (using the value K=5).\n",
    "knn = KNeighborsClassifier(n_neighbors=5)\n",
    "\n",
    "# Fit the model with data.\n",
    "knn.fit(X, y)\n",
    "\n",
    "# Store the predicted response values.\n",
    "y_pred_class = knn.predict(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "**Question:** Which model produced the correct predictions for the two unknown irises?\n",
    "\n",
    "**Answer:** ...\n",
    "\n",
    "**Question:** Does that mean that we have to guess how well our models are likely to do?\n",
    "\n",
    "**Answer:** ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0. ,  0.6,  0.4],\n",
       "       [ 0. ,  0.8,  0.2],\n",
       "       [ 0.8,  0.2,  0. ],\n",
       "       ..., \n",
       "       [ 0. ,  0.6,  0.4],\n",
       "       [ 0.6,  0.4,  0. ],\n",
       "       [ 0.6,  0.4,  0. ]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Calculate predicted probabilities of class membership.\n",
    "knn.predict_proba(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"what-happen-if-we-view-the-accuracy-of-our-training-data\"></a>\n",
    "### What Happens If We View the Accuracy of our Training Data?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "accuracies = []\n",
    "for k in range(1,100):\n",
    "    knn = KNeighborsClassifier(n_neighbors=k)\n",
    "    knn.fit(X,y)\n",
    "    pred = knn.predict(X)\n",
    "    accuracy = float(sum(pred == y)) / len(y)\n",
    "    accuracies.append([k, accuracy])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nfvop2dnZFBQU8PHHH9O/f3+7Y3P5HqKsrCz27dsHgMlk4o8//mDbtm1UqFCB6tWrM3ToUGbPnk2d\nOnWoXbs2s2bNws/Pz/LSAwMD6d+/PxMmTCAkJIQKFSrw4osvEhkZSZs2bQrdb+bMmdx7773ccccd\nADRr1oyxY8fSp08fPvvsM8t6SCIiIpeUZExPcXJychy+ueuHH35IQUEBDRs2tJy7fHmZ6+Xm5mZp\n75L8/PxC9fz8/KyOt27dyqBBg3j++eeZOnUqgYGBrFy5kvHjx9t87/vuu49y5crx+eefExAQQEZG\nhiUHsEeuqydEP//8M506dbIcx8fHEx8fT+/evUlISGD48OFkZ2czevRojEYjTZs2ZdmyZVaftOLj\n43F3dyc2NpacnBxat27NW2+9hbu7u9W90tLSWLZsGZs2bbKc69SpE99++y2dOnWiatWqJCQkOP+h\nRUREHCQ/P5/FixczYcKEQtPthwwZwqJFi2jcuDEff/wxp06dKrKXqHHjxmzcuJGBAwcWeY9KlSpx\n9OhRy3FOTg67d++mcePGV43tu+++o0qVKlafzX7//Xe77u3h4UGfPn1YuHAhAQEBdOrUicDAwKve\ntygu30PUqlUrjEZjseUGg4G4uDji4uKKrePt7c3MmTMtI92L06BBA3766Serc25ubkyfPp3p06fb\nF7iIiIgLWLNmDadOnWLgwIFUrFjRqqx79+68++67pKSkMGfOHPr06cOECROoWrUqaWlplC9fntat\nWzNq1Ch69epFREQEPXr0wGw2s379emJjYylXrhytW7dm4cKF3H///VSqVIlXX33VpuEltWvX5siR\nIyxdupS77rqLdevW8emnn1rVuda94eJns7lz5+Lm5sayZctK9DvZ0kPksmOIRERE5OoSExNp1apV\noWQIoGvXrhw6dIjvv/+e//73v5btrZo1a0Z8fLxlV/gOHTqwcOFC1q5dS+vWrenYsSObNm2yLJg8\ncuRIWrduTd++fXnooYe4++67bRrUfP/99/PMM88QFxdHixYt2LBhA2PHjrWqc617w8UB4C1atOCW\nW26hVatWJfqdbOkhMhiNxmvXErnBtK6Ka9J7cU16LyWTkZFRos8x9nDGGKKyIDo6mocffpjnnnvO\npvpXvsuR357hvd/OX3U8mMtOuxcREZGy7eTJkyxfvpxDhw4RGxtb4nZybJhAroRIREREXFLt2rUJ\n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\nn39yyy23sHDhQgIDAwE4c+YM3377Lffff7/9EYuIiIg4kNlstnsMkc09RO7u7owbN45x48YVKqtQ\noQLp6em2NiUiIiLiNPlmuHySmbsBPNy0UrWIiIiUIfb2DsFVeoimT5+OwWDgueeew83NjenTp1+z\nMYPBwJgxY2wIVURERMQ57J1hBldJiKZNm4bBYGDEiBF4eXkxbdq0azamhEhERERutCt3ur/WPmZw\nlYTozJkzVz0WERERcUUXTNbHtvQQaQyRiIiI/K2UZAyREiIRERH5WynJGCIlRCIiIvK3UniVaiVE\nIiIiUsaoh0hERETKvMJjiK59jRIiERER+Vuxdx8zsDEhOn/+PFFRUbz11lslCkxERESktDhtllm5\ncuXIyMjAy8urZJGVUEFBAVOmTKFx48aEhobSuHFjpkyZQn5+vqXO0KFDCQoKsvpr3769VTtjx44l\nPDycyMhIli5dalW2atUqYmJiMJutfzwRERG5OTl0peor/fOf/+TLL79k0KBB9kdWQnPnzuXtt98m\nISGBBg0asHPnTp588km8vLysVsRu06YNCxYssBxfnritWrWKpKQkkpOT2bt3L8OGDaNdu3YEBweT\nmZnJ2LFjWbx4MQbDtX8sERERcX2FV6p2YEI0cuRIBg0axKOPPkpsbCy1atXC19e3UL2QkBBbm7ym\nLVu2EBMTw/333w9AzZo1iYmJ4ccff7Sq5+3tTWhoaJFt7N69m5YtW9KkSROaNGlCXFwcBw8eJDg4\nmMmTJ9OzZ0/q1avnsJhFRETkxnJqD1Hz5s0B2LVrF59//nmx9U6fPm1rk9d09913884777B7927q\n1q3Lrl272LRpEyNHjrSql5KSQu3atQkMDKRFixaMHz/ekpg1bNiQ999/H6PRyIEDB8jJySEiIoKt\nW7eyefNmNm7caHM86enpDns2sZ9+f9ek9+Ka9F5cl96N8/15wgP462vR+YwzpKcfp06dOsVeY3NC\nNGbMmFL/rDRixAiysrKIjo7G3d2d/Px8nnvuOR577DFLnfbt29OpUydq1qzJoUOHmDJlCp07d+ar\nr77C29ubdu3a0bNnT9q2bYuvry9vvvkmfn5+DB8+nNmzZ7No0SISEhLw9fVlxowZREdHFxvP1X5I\nca709HT9/i5I78U16b24Lr2b0uGXeRYOZlqOq4RUpE6dgKteY3NCFBcXV/LISmjZsmUsWbKEt99+\n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\nTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f354479cd90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from matplotlib.ticker import FuncFormatter\n",
    "\n",
    "data = pd.DataFrame(accuracies,columns=['k','Accuracy'])\n",
    "\n",
    "ax = data.sort_values('k', ascending=False).plot.line(x='k',y='Accuracy')\n",
    "\n",
    "plt.xlabel('Value of K for KNN');\n",
    "plt.ylabel('Accuracy (higher is better)')\n",
    "ax.yaxis.set_major_formatter(FuncFormatter(lambda y, _: '{:.0%}'.format(y)));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Search for the \"best\" value of K."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Calculate TRAINING ERROR and TESTING ERROR for K=1 through 100.\n",
    "\n",
    "k_range = range(1, 101)\n",
    "training_error = []\n",
    "testing_error = []\n",
    "\n",
    "# Find test accuracy for all values of K between 1 and 100 (inclusive).\n",
    "for k in k_range:\n",
    "\n",
    "    # Instantiate the model with the current K value.\n",
    "    knn = KNeighborsClassifier(n_neighbors=k)\n",
    "    knn.fit(X_train, y_train)\n",
    "    \n",
    "    # Calculate training error (error = 1 - accuracy).\n",
    "    y_pred_class = knn.predict(X)\n",
    "    training_accuracy = accuracy_score(y, y_pred_class)\n",
    "    training_error.append(1 - training_accuracy)\n",
    "    \n",
    "    # Calculate testing error.\n",
    "    y_pred_class = knn.predict(X_test)\n",
    "    testing_accuracy = accuracy_score(y_test, y_pred_class)\n",
    "    testing_error.append(1 - testing_accuracy)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {
    "collapsed": true,
=======
   "execution_count": 25,
   "metadata": {
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
    "slideshow": {
     "slide_type": "fragment"
    }
   },
<<<<<<< HEAD
   "outputs": [],
=======
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>testing error</th>\n",
       "      <th>training error</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.382845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>0.358333</td>\n",
       "      <td>0.378661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.384937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.384937</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>0.366667</td>\n",
       "      <td>0.380753</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     testing error  training error\n",
       "K                                 \n",
       "100       0.366667        0.382845\n",
       "99        0.358333        0.378661\n",
       "98        0.366667        0.384937\n",
       "97        0.366667        0.384937\n",
       "96        0.366667        0.380753"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
>>>>>>> c94ac813491346975d4b193eaa454002fa665fe4
   "source": [
    "# Create a DataFrame of K, training error, and testing error.\n",
    "column_dict = {'K': k_range, 'training error':training_error, 'testing error':testing_error}\n",
    "df = pd.DataFrame(column_dict).set_index('K').sort_index(ascending=False)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n//77JCQkMGfOHA4cOMA777xDQkICCxYsMB9Tleskak5WVhaPPvooJpOJ1atXs3//fubOnWsu8gly\nTerTwYMHWbJkidUqU7kmda+kLdK2bdvYuHEjDg4ODB48mGvXrpmPketinxr1lFabNm2YO3cuI0eO\nBG5G3REREfzpT39i0qRJAOTn5xMeHs6MGTMYPXo0169fJywsjIULFxITEwPA+fPn6dixI2vXrqVv\n37719nkai9jYWLy8vPj444/N25577jmuXbvGqlWrqnSdRM2aPn06u3fvZtu2bTb3yzWpP9evX+fB\nBx/k73//O3PmzCEyMpJ58+bJNbETOTk5BAYGsnz5cgYMGCDXxY41uhGeipw5c4b09HT69Olj3qbT\n6ejRowf79+8H4PDhw+j1esUx/v7+tG/f3nyMuDPdunUjMTGRkydPAnDixAl27drFww8/DFTtOoma\n9e2339K5c2dGjx5NWFgYPXv25JNPPsFkuvn3kFyT+vPKK68waNAgevXqpdgu18Q+WLZFkutiv+q9\n8GBdKln6XnaYvuTxpUuXgJsrvjQaDd7e3lbHZGRk1M2JNnKvvPIKOTk5dO3aFY1GQ3FxMZMmTWLM\nmDFA1a6TqFmnT5/ms88+44UXXuCVV17hyJEjTJkyBYCxY8fKNaknX3zxBWlpaXzyySdW++Sa2IfX\nXnuNjh070qVLF0Cuiz1rUgGPsA/r169n5cqVJCQkEBERwZEjR3jttdcIDAzkD3/4Q32fXpNkNBqJ\njo7mrbfeAuCee+4hLS2NhIQExo4dW89n1zQlJyczffp0tm7dilarre/TETZMnTqVffv2sXXrVnMP\nSGG/mtSUVkmF5szMTMX2zMxMfHx8APDx8cFgMHD16tVyjxF35s033+Sll15i6NChREVFERcXx4sv\nvsh7770HVO06iZrl6+tL+/btFdvatWvH+fPnzftBrkldOnDgAFevXqVbt254e3vj7e3N7t27SUhI\nwNvbm+bNmwNyTepLfHw869atY+PGjYq2SPJdsV9NKuAJCgrC19eXH374wbytoKCAvXv3mjupd+rU\nCa1WqzjmwoUL/Prrr9JtvYbk5eVZ/TWk0WgwGo1A1a6TqFndunUjJSVFsS0lJYWAgABArkl9GDhw\nIHv27GHXrl3mf9HR0QwdOpRdu3YRFhYm16SeTJkyxRzsWLZFku+K/dK89tprb9f3SdSknJwcTpw4\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f354479c750>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the relationship between K (HIGH TO LOW) and TESTING ERROR.\n",
    "ax = df.plot(y='testing error')\n",
    "\n",
    "plt.xlabel('Value of K for KNN');\n",
    "plt.ylabel('Error (lower is better)')\n",
    "ax.yaxis.set_major_formatter(FuncFormatter(lambda y, _: '{:.0%}'.format(y)));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>testing error</th>\n",
       "      <th>training error</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.258333</td>\n",
       "      <td>0.299163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.266667</td>\n",
       "      <td>0.307531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.266667</td>\n",
       "      <td>0.307531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.266667</td>\n",
       "      <td>0.299163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.266667</td>\n",
       "      <td>0.309623</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    testing error  training error\n",
       "K                                \n",
       "14       0.258333        0.299163\n",
       "13       0.266667        0.307531\n",
       "18       0.266667        0.307531\n",
       "16       0.266667        0.299163\n",
       "15       0.266667        0.309623"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find the minimum testing error and the associated K value.\n",
    "df.sort_values('testing error').head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.2583333333333333, 14)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Alternative method:\n",
    "min(zip(testing_error, k_range))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['testing error'].idxmin()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"training-error-versus-testing-error\"></a>\n",
    "### Training Error Versus Testing Error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjwAAAGTCAYAAAAsrcg8AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3XlYVNX/wPH3nX1YBwHBBUVxxzWt3DXN5etembZoZZlm\nai5l/dA0RcvdsjSzxbWyzFwzRa00CU3TzF3RFHdAkJ2BWe7vD3RgmGETELTzeh6emrucOXfuOPOZ\ncz7nHCkhIUFGEARBEAThAaYo6woIgiAIgiCUNhHwCIIgCILwwBMBjyAIgiAIDzwR8AiCIAiC8MAT\nAY8gCIIgCA88EfAIgiAIgvDAEwGPIAiCIAgPPBHwCOVOZGRkWVdByEXck/JH3JPySdyX8ksEPIIg\nCIIgPPBEwCMIgiAIwgNPBDyCIAiCIDzwRMAjCIIgCMIDT1XWFSjvzGYzqampZV2N/xSdTkdiYmJZ\nV+OuqVQqXF1dy7oagiAIQg4i4MmH2WwmOTkZg8GAJEllXZ3/DK1Wi06nK+tq3LXU1FQyMjLQarVl\nXRVBEAThNtGllY/U1FQR7AhF5uLigtFoLOtqCIIgCDmIgKcAItgRikq8ZwRBEMofEfAIgiAIgvDA\nEwGPIAiCIAgPvHIT8CxYsACDwcCECRNs20aMGIHBYLD7e/zxx+3OmzhxIoGBgQQHB7N27Vq7fdu2\nbaN79+7IsnxPrkEQBEEQhPKpXIzSOnjwICtWrCA4ONhhX8eOHVm6dKntsUajsf3/tm3bWLduHRs2\nbOD8+fOMGjWKzp074+3tTXJyMhMnTmTNmjUip6IUjRgxgvj4eL7//vuyroogCILwH3DkZiZfnE6l\nhruK0Q3d0CoL9x1f5i08iYmJvPrqqyxatAiDweCwX6vV4ufnZ/vz8vKy7Tt79ixt27alWbNm9O/f\nH3d3d6KiogAIDQ1lwIAB1KtX755dS3nRs2dPu5aykrB3714MBgNxcXF222fNmmUXkAqCIAhCaUkx\nWem17SbfRKYx43ASC44mF/rcMm/hGTt2LH379qV9+/bMnj3bYf++ffuoVasWnp6etGnThsmTJ+Pr\n6wtAw4YNWbFiBQkJCVy8eBGj0UjNmjU5ePAg4eHh7Nmzp9D1cLbCrU6nuy/nUrFarZjN5hIdGp2Z\nmQmA0Wi0K/fO61PSw7BLorzMzEy7FsE7TCYTarW6xMpzJikpiZiYmCI/R3kmVoEuf8Q9KZ/EfSk9\nBxIUpJiz52nbej6B/m7RANSuXTvfc6WEhIQyS3BZuXIly5YtY9euXajVanr27EmDBg2YO3cuAD/+\n+CN6vZ7q1atz6dIlZsyYgdVqZffu3bYv2pkzZ7J27Vr0ej0hISF0796dDh06MH/+fE6fPs2SJUvQ\n6/XMmTOHRx99tEj1S0xMxNPT026bYfnVkrn4QkoYUqVIx48YMYI1a9bYbfvnn3+oXr06p0+fZsqU\nKURERKDT6ejQoQMffPABfn5+AJw4cYKQkBD+/vtvrFYrgYGBzJw5k+rVq9OkSRO7Mp999lmWLFni\n0KXVs2dP6tWrh6enJytWrEChUPDMM88QGhqKQpHVoBgTE8Mbb7zB7t278fX1ZeLEiXz88cf06dOH\nkJAQjEaj04kHt23bxqxZszh9+jR+fn48/fTTvPPOO7YgpFGjRjz33HNcuXKFLVu28NhjjxEaGkqT\nJk348ssvWblyJQcPHiQ0NJRhw4axefNmZs2axblz5/D19WXIkCG8+eabti5QZ+WtXLmyUPfB2Xvn\nfhYZGVngh4lwb4l7Uj6J+1K6Nl5I56Xd8bbH1d2U/PO0f6HOLbMWnsjISEJDQ9m+fXuev7afeuop\n2/8HBwfTtGlTGjVqRFhYGH369AEgJCSEkJAQ23Hz5s3j0UcfxcPDgw8++IC9e/dy8uRJhgwZwpEj\nRwr9C/1+NWvWLM6fP0/t2rWZMmUKAD4+Pty4cYMePXowePBgpk+fjslkYvr06Tz33HPs3LkThULB\nq6++SsOGDfnll19QqVScOHECnU5H1apVWbVqFS+88AL79+/Hy8sr35mQf/jhB4YPH86OHTs4duwY\nQ4cOpWnTpvTv3x/ICspu3LjB5s2b0el0vPvuu1y+fDnf6/rll18YNmwYM2fOpE2bNly+fJnx48eT\nkZHBjBkzbMd9+umnvPXWW+zevdsuWX3atGnMmDGDTz75BLVazZEjR3jppZd46623GDBgAIcPH2bc\nuHG4u7szfPjwAssTBEEQ7r2ETKvd4zijNY8jHZVZwHPgwAHi4uJo2bKlbZvFYiEiIoJly5Zx7do1\nh+6kSpUqUblyZf7991+nZZ47d47Vq1fz+++/s2bNGlq3bo2/vz/+/v5kZGQQGRnpNDH6QeLp6Yla\nrcbFxcXWcgPw1Vdf0bBhQ6ZNm2bbtnTpUgIDA/n7779p3rw5ly9fZtSoUdSpUweAmjVr2o69kzvl\n6+uLt7d3vnWoW7cukyZNAqBWrVqsXLmSPXv20L9/fyIjI/nll1/YuXMnDz/8MJAVVDRu3DjfMufN\nm8fo0aMZNGgQADVq1GDq1KkMHz6c6dOn21plWrduzZgxY2zn3cnpGjZsGH379rVtnzp1Km3atGHi\nxIm2ep4/f56FCxfaBTy5yxMEQRDKzq0M+wAnxSyTbpbRqwpOXC6zgKdnz540a9bMbtvIkSMJCgpi\n/PjxTltibt68yfXr1+2+yO+QZZkxY8Ywffp0PD09sVqtmEwm2z6TyYTFYimdi7kP/PPPP0RERFCl\nimMX2YULF2jevDmvv/46b7zxBmvWrKFDhw706dPHFvwURe6g0t/fn9jYWCAr0VyhUNjd+6pVq1Kp\nUqUC63/48GEWLlxo22a1WklPTyc6Ohp//6wmzdzvqTtybz9z5gxdu3a129aqVStmz55NUlISHh4e\n+ZYnCIIg3HsJGY4tOjeNFgLcCg5nyizguTOvTk4uLi54eXnRoEEDUlJSmDVrFn369MHPz49Lly4R\nGhqKr68vvXr1cihv9erVGAwGW1dXq1atmDlzJvv27eP48eOo1eoS6Vctak5NeWG1Wunatatd988d\nd5LAQ0JCGDBgADt37uTXX39l9uzZLFiwgMGDBxfpuXJ3UUqSVOzuIKvVyjvvvEO/fv0c9vn4+Nj+\nP69VyouyennOaQzEqueCIAjlR+4uLYCbRisBbgWfW+ajtPKiVCo5efIk3333HYmJifj5+dGuXTuW\nL1+Ou7u73bExMTHMnTuXsLAw27ZmzZoxbtw4Bg0ahJubG0uXLkWv19/ryygTGo3GoTWrSZMmbNiw\ngYCAgHxHKAUFBREUFMRrr73G+PHjWb16NYMHD7a1uBW3laxOnTpYrVaOHDlCixYtALh69SrXr1/P\n97wmTZpw9uxZu2624qhbty5//vmn3bZ9+/ZRpUoVh/eXIAiCUD7k7tICiE0vXB5PuQp4tm7davt/\nvV7P+vXrC3VexYoVOXbsmMP28ePHM378+BKr3/2iWrVqHDp0iKioKNzc3PDy8mLo0KGsXLmSIUOG\nMHbsWHx8fLh48SIbNmxgxowZqFQqJk+eTN++falWrRqxsbHs37+f5s2bAxAQEIAkSYSFhfG///0P\nnU6Hm1shQupcateuTefOnRk3bhwLFixAq9UyZcoU9Hp9vhNEvv322wwcOJCAgACeeOIJVCoVp06d\n4tChQ4SGhha5HiNHjqRTp07MnDmTp59+msOHD7N48WImT55c5LIEQRCEeyMh07G34KaxcD/Ey3zi\nQaHkjR49Go1GQ8uWLQkKCuLy5ctUqlSJsLAwFAoFTz31FC1btuStt95Co9Gg1WpRKpUkJCTw+uuv\n8/DDDzNo0CAefvhh3n//fQAqV65MSEgIM2bMoHbt2sWa2PDTTz+lcuXK9OrVi+eee47+/fvj6+ub\n78ivzp07s3btWsLDw+ncuTOdO3fmww8/pGrVqndVh6ZNm7JixQq2bNlCq1atmDZtGmPHjmXYsGF3\ne1mCIAhCKXOew1O4Fp4ynYenvHvQ5lIpr+Li4qhXrx5ffvklffv2zXMenvvJg/beEXOLlD/inpRP\n4r6UrsY/3OBSin2LzuiGbkx/uODP23LVpSX8N+zZs4eUlBSCg4OJjY1l+vTpeHt7OywMKwiCIAg5\nFaeFRwQ8wj1nNpt5//33uXjxInq9nhYtWvDzzz+LEVGCIAhCnixWmSSTkxye9MLl8IiAR7jn7uTg\nCIIgCEJhJToZkg5w00mrjzMiaVkQBEEQhHLvVobzlOPCDksXAY8gCIIgCOWes0kHIWtYemEmtxUB\njyAIgiAI5V5eAY/RAqlmEfAIgiAIgvAAcDZC647CjNQSAY8gCIIgCOWes2Ul7ihMHo8IeARBEARB\nKPecLStxR2GWlxABj1Cgnj17FnkpiUaNGvHJJ5+UUo0EQRCE/5r8urRiC9GlJebheQD17NmTBg0a\nMHfu3BIp7+uvv0alKtpb5bfffsPFxaVEnl8QBEEQbuWRtAwQJwIeIT8mkwm1Wl3gcV5eXkUu28fH\n526qdE84u26r1YosyyiVyhIpTxAEQShZ+bfwiC6tEuf2Ysd7+ldUI0aM4I8//uCLL77AYDBgMBiI\niopi7969GAwGduzYQadOnfD19eWXX37hwoULPPvss9SpU4fKlSvTvn17tm/fbldm7i6tRo0aMXfu\nXMaOHUtAQAANGjTg448/tjsnd5eWwWBgxYoVvPjii1SuXJkmTZrw/fff253z119/0b59e6pXr06H\nDh3YtWsXBoOBvXv35nm9siyzcOFCmjZtir+/P61bt7YrNyoqCoPBwLp16+jduzf+/v4sX76cb775\nhipVqrBjxw5atWqFr68vZ86cwWq1MmfOHIKDg6lYsSKtW7dm69atBZYnCIIglK68hqUD3BRJy/89\ns2bN4pFHHuH555/nzJkznDlzhqpVq9r2T506lXfffZeDBw/SokULUlJS6NKlCxs2bCA8PJw+ffow\nePBgzp49m+/zfPrppzRo0IA9e/YwZswYpkyZwoEDB/I9Z86cOfTo0YPw8HCefPJJRo0axeXLlwFI\nSUlh4MCB1KlTh7CwMKZOncrkyZMLvN4ZM2awevVq5s2bx/79+xk3bhzjxo0jLCzM7rhp06YxdOhQ\n9u/fT8+ePQEwGo3MnTuXDz/8kD///JOAgACWLFnCJ598wtSpU4mIiKBnz54MHjyYo0ePFlieIAiC\nUHqKOyxddGk9YDw9PVGr1bi4uODn5+ew/5133qFTp062xz4+PjRq1Mj2+K233mL79u1s2rQp30Tl\nTp06MWzYMACGDx/O0qVL2bNnD4888kie5wwcOJCBAwcCMGnSJD777DMiIiIYOHAgP/zwAxaLhU8+\n+QRJktDpdIwfP55XX301z/JSU1NZvHgx69evp3Xr1gAEBgZy6NAhvvzyS7p162Y7dtiwYfTt29fu\nfIvFwty5c2natKlt26JFixg1ahRPP/20rZ4REREsWrSIzz//PN/yBEEQhNKTkMfSEiCSlgUnmjVr\nZvc4NTWV2bNnExYWxo0bNzCbzRiNRoKDg/MtJ/d+f39/YmNjC32OSqXC29vbds7Zs2epX78+er0e\no9EIQIsWLfIt78yZMxiNRvr3748kSbbtJpOJatWq2R2b+7rv1CFnsJeUlMT169dp2bKl3XGtWrVi\nx44dBZYnCIIglJ58u7QKkcMjAp4iSlm5u6yrUCyurq52jydPnsyuXbuYPn06QUFBuLi48Nprr5GZ\nmZlvObmTdCVJKnAtk7s5Jz9Wa9abf82aNQQEBNjtyz2qLPd1A2i12kInKecMqPIqTxAEQSgdmRY5\n3+UjRJfWf5RGo8FiKTjaBdi/fz/PPPOMrXvGaDRy4cIFgoKCSrOKDurUqcOaNWtIT0+3BReHDh3K\n95y6deui1Wq5fPkyHTp0KHYdPDw8qFSpEvv377crb9++fdStW7fY5QuCIAh3J3frjpdWIjPHGlqm\nQiyYLgKeB1C1atU4dOgQUVFRuLm55TusPCgoiJ9++okePXqgVquZPXs2GRkZ97C2Wfr378+MGTMY\nM2YMI0eO5NatWyxYsABwbF25w93dndGjRzN58mRkWaZNmzakpKTw119/oVAoeOmll4pcj9GjRzNz\n5kyCgoJo2rQp33//Pfv27WPPnj3FuTxBEAShGHInLHtpFFhkSE0p3I97EAHPA2n06NGMGDGCli1b\nkp6ezj///JPnse+//z6jR4+mR48eGAwGRowYUSYBj7u7O9999x3jx4+nS5cu1K1bl3feeYcXX3wR\nnU6X53mTJk3C19eXRYsW8eabb+Lu7k6jRo0YM2bMXdXjtddeIyUlhffee4+YmBhq167NqlWr7HJ9\nBEEQhHsrdwuPQatAAqKKEPBICQkJd59E8YBLTEzE09OzrKvxn2M0GtHpdGzdupVBgwZx7tw5vL29\ny7paRfKgvXciIyOpXbt2WVdDyEHck/JJ3JfSseOykQG74myPO1XWolZKhF022rYlDKmSbxmihUco\nN7799lsCAwPx8fHh33//JSQkhO7du993wY4gCIJQsnIvK+GlVaBXOU93yIsIeIRyIzY2lpkzZxId\nHU3FihXp1q0bU6dOLetqCYIgCGUsdw6PQavAXS0CHuE+NWbMGMaMGWPr0hIEQRAEcJLDo5Hw0hZt\nsQixtIQgCIIgCOXardwtPBoFPrqiLfYsAh5BEARBEMo1Z11avnrRwlOiijMTsPDfJN4zgiAIJSsh\n0/5z1aBV4KMTAU+JcXV1JSEhQXyBCUWSlpYmcpAEQRBKUKJDDk/Ru7RE0nI+VCoV7u7uJCUllXVV\n/lOSkpLw8PAo62rcNZVKhVarLetqCIIgPDBy5/B43UULjwh4CqBSqR6oCeTuBzExMQ6LgQqCIAj/\nXQ45PBoJrVLCQy2RZCpcL4zo0hIEQRAEoVxztrQEUKRWHhHwCIIgCIJQbqWbZYw5lsxSK8D19izL\nvvrC5/GUm4BnwYIFGAwGJkyYYNsmyzIzZ86kXr16+Pv707NnT06dOmV33sSJEwkMDCQ4OJi1a9fa\n7du2bRvdu3cXSceCIAiCcJ9ynHRQgSRlBTze91sLz8GDB1mxYgXBwcF22xcuXMjixYuZPXs2v/76\nK76+vjzxxBMkJycDWQHNunXr2LBhA9OmTeONN94gLi5rcbHk5GQmTpzIRx99ZHthBEEQBEG4vzib\ng+cO3/sp4ElMTOTVV19l0aJFGAwG23ZZllmyZAljx46lb9++NGjQgCVLlpCSksK6desAOHv2LG3b\ntqVZs2b0798fd3d3oqKiAAgNDWXAgAHUq1evTK5LEARBEITic7asxB2+RRiaXuajtO4ENO3bt2f2\n7Nm27VFRUURHR9OpUyfbNr1eT+vWrfnzzz8ZMmQIDRs2ZMWKFSQkJHDx4kWMRiM1a9bk4MGDhIeH\ns2fPnkLXIzIyskSvSygecT/KH3FPyh9xT8oncV9K1ok4JZA91YfGbLS9xtZkFaApVDllGvCsXLmS\nf//9l88//9xhX3R0NAC+vr522319fbl+/ToAnTt3ZsCAATz22GPo9Xo+/fRTXF1dGTNmDAsWLOCb\nb75hyZIl6PV65syZw6OPPppnXWrXrl2CVyYUR2RkpLgf5Yy4J+WPuCflk7gvJe8gqUCC7XEVLzdq\n164GQANlGly4VahyyizgiYyMJDQ0lO3bt6NWq++6nJCQEEJCQmyP582bx6OPPoqHhwcffPABe/fu\n5eTJkwwZMoQjR46g0RQuEhQEQRAEoezlXlbCM0cOT1GGpZdZwHPgwAHi4uJo2bKlbZvFYiEiIoJl\ny5axf/9+AGJjY+0moYuNjaVixYpOyzx37hyrV6/m999/Z82aNbRu3Rp/f3/8/f3JyMggMjLSITFa\nEARBEITyy9ksy3cUZXmJMgt4evbsSbNmzey2jRw5kqCgIMaPH0+tWrXw8/Pjt99+46GHHgLAaDSy\nb98+QkNDHcqTZZkxY8Ywffp0PD09sVqtmEwm2z6TyYTFYnE4TxAEQRCE8svZsPQ7ijJKq8wCHoPB\nYDcqC8DFxQUvLy8aNGgAwIgRI1iwYAG1a9emVq1azJs3D1dXV/r37+9Q3urVqzEYDPTp0weAVq1a\nMXPmTPbt28fx48dRq9WiX1UQBEEQ7jOJTpaVuKPC/RDwFMaYMWNIT09nwoQJJCQk0Lx5c9avX4+7\nu7vdcTExMcydO5ewsDDbtmbNmjFu3DgGDRqEm5sbS5cuRa/X3+tLEARBEAShGPJaVgJArZDw0krc\nyih4gmEpISFBTEMslCtilEP5I+5J+SPuSfkk7kvJ6/JTDAdjTbbH23r40Move5j6w+ujiUw0kzCk\nSr7llPnEg4IgCIIgCHnJPUorZw4PFH6klgh4BEEQBEEot/JbWgIKn7gsAh5BEARBEMolWZYdhqU7\ntvAUbmh6uU5aLhdkGSnmKlJKssMua5XqoHMpg0oJgiAIwoMv1SxjztGjpVOCXmW/ILiPvnBtNyLg\nyY/FjPbzmaj3/+J0t6zWYOrxLJn9XgBF4Sc/EgRBEAShYA7dWRrH4EZ0aRWXLKNd+WGewQ6AZMpE\ns2kl+tnjkW7dvIeVEwRBEIQHy/bL6Qz+NY6Fx5KR5axmndwJy15ax7BFJC0XldV+FmbNxhWo92wt\n1KnK0//gMvkVlEf/LI2aCYIgCMIDLSrZzPO/xLMlysh7fyXxxalUwHFZidwJy1D4HB4R8NymmzsB\nKSEOANVvm9FsXGm3X3bzwFKjnu1PdvWw2y8lJ6Kf/w6atZ+D2XzP6i0IgiAI97tfr2ZgydGY89Xp\nVGRZdph00NNJl1YDLxVfdfAq8DlEDs9tqpOHUUwZiumxvmg2rbLbJ7t6kPbuIuRK1WzbpIQ4tEvf\nR3XysN2xmq3fojxzFOPrk5G9/e5J3QVBEAThfnYj3b6X5UyimVMJZic5PPYJywDeOiVP1Sx4AJFo\n4clBkXgL7cYVSHL2CyxrtKSPn2kX7ADIBm+ME+aS8dQryJL9y6g8dxyXyUNRHv7D4Tmk2Ouod65H\nveNHyDCWzoUIgiAIwn0kOs1xce/1F9IdWnic5fAUlmjhyYcsKTC+/h7WWsHOD1AoMfUZjKVOY3Sf\nTUeRI3FZSk1Gv3ASmd2eJrPPYFR//4EqPAzV6SO2Y1R/hJH+7iJQa0r7UgRBEASh3IpOtzps23gh\nnb6BOrttznJ4Cku08NwmS47NZBkvjcfSrHWB51rrNSFt+peYGz/qsE8T9gOuo/qi+3K2XbADoLx4\n1iFXyCYzA/Xm1WhXfoh09WKhrkEQBEEQ7kfR6Y4tPOeSzITfyLTb5mxYemGJgOc249vzsXpWsD3O\neOoVzB17Fb4AdwPGcTPJGPgastI+Y1yS816fVb11DYrzJ+03mjLRfRiC9sevUP+6CZdpr6G4cLrw\ndblHLFaZU7dMxBsd36iCIAiCUFjRaY4tPAB/xtgHPMXp0hIBz22WBg+RNmsVxuGTSHt3EaY+g4te\niEKBqcczpE/8GGs+CcuyWm37f0m2ovtiFmRmZG2wWtF+MdMuGVrKMKJbEIIUfbXodSolqSYr/cJu\n0mpjDM3XRxNxI6OsqyQIgiDch6yyTEwhfziLFp6S4uKGuXUXrLUbFqsYa61g0kK/wPxQ2+xtFXzJ\n7PU8qTNXYhw9w+54xfVLaNYvA1lGs+ZT1H/+5lCmIukW+nkTkJJuFatuJWXqX0nsvd3UeCtDZuie\neIdsekEQBEEoyK0MK6ZCfn0YtI7pJ4UlkpZLi5sHxjEzUERFgtWCtXpt2/ITlsrVMbXvgfr3n22H\nq7evRUpJQr13W55FKmKuoZv/DukhH2Wt4ZWeiurAblT7dqGIvYalXjNM7bpjrdMYFKUXy+65lsEX\np1Pttl1LsxJyIJEl7QqeC0EQBEEQ7riRR3eWM2KUVjlmrV7b6faMZ19HefwvFPExQFaeT+5gx+pZ\nAWutYFSH9tq2KS+eRffRJGSDN6pDe5Eys7uSFOHbUYdvx+rjj7lNN0xtuiL7VSnR60nKtDLqD+et\nTGvOpdG7uo4e1fQl+pyCIAjCgyt3wrJSwm4SwpxEl9b9yMWNjKFv57lb1rlgfHM2xtenYG74sN0+\n1am/Ue/bZRfs5KS4eQPNppW4vv08ukXvQUpiiVV78sFELqfk3dc6NiJBJDELgiAIhZZ7SPrjVbTk\ntVrEPR2WHh0dzcmTJzl16hQxMTF3/cQCWIJbYHqsj8N2WanCOGZGVuuQSo1x1DQsgXXu6jlUB/fg\nMnkoirPHCn+SLGcthmqxXyJj1xUjK8+m2W37X4AOZY4u1Zh0KxP2l1yAJQiCIDzYck86GOSpoktV\nncNxrioJteLuc3gKDHhSUlJYvXo1AwcOpGbNmtSvX5+2bdvSpk0b6tWrR82aNRk4cCCrVq0iOTn5\nrivyX5Ux8DWsPv7224ZPxNLgoewNeheM42dhrVjZ4Xyrtx+ZvQeRPno6pkc7ITuZxFARH4t+5hjU\nW74Ba/59pdLVi+inDsd1bH9cJr2MFH0FgIQMK2/k6sqq7aliWccKvNnE3W77jxfS2XQxPd/nEQRB\nEARwXFbCX6/kyRqOqRHFyd8BkBISEpz2lMXHx7NgwQJWrFiB0WgkODiYpk2bEhgYiMFgyFrUKyGB\nqKgojhw5wokTJ9Bqtbz00kuMHz8eb2/vYlWsvNgfncGHx1KIK8VummrJ13j34BI8MpP5IngAvwQ4\nn+ywUmoMbx/6gqopNzjqU5efAzty2LeB3dIWrqY0Hr8cwVPnwqiTGOV4PX5NCH1kJPE6g/0OWabn\nxd1M+PsrdJbseQ8uu/oxvNN0zuLBxeTs10AhwY6evrTw1ZBpken8UyzH4k22/e5qibqG7BQxCWju\nq2FiMw88CuiDjYyMpHZt57lPQtkQ96T8EfekfBL3xZ4syyw/k8aOK0Y6Vdbyan1XpFwT/b68O571\nF7J/JH/Wzove1XXU/u4GaebsECXYS8Uf/e5+jco8A56qVasSGBjIkCFD6Nu3Lz4+PvkWdPPmTTZt\n2sSKFSu4ePEily9fvutKlRfnE8202xxj94LfL1RWM+9fWMubl7c67EtXqNnk04LVfu3YWaEReksm\niyKXMzgCJFR3AAAgAElEQVQ63GlZf7nV4PGmk0hRZUfc4xq58V4LT9vjE/EmOm6JKXBo4aDaLixq\nm/9ILvGBUf6Ie1L+iHtSPon7Ym/3NSP9wuJsj3/o4u3QXdXj51giorN/aG/s5k3HyjqG/BbPhhy9\nBW38NWz9n+9d1yXPUVrLli2ja9euhS7Ix8eHV155hVdeeYUdO3bcdYXKys+X0u1GF1msMiP23rov\ngx0As0LFO0HPscdQn2WnPsPHnGLbp7eaeCZmH8/E7OOaxkC6QkOQMe98rBYpF1h7YiF9G72FSaGi\ngUHF/zXzQIqPRXnqb8jMoAmwVmFk65W8F0Q9p/fjx/P1mfmoJ+5qkS8vCILwoNt73X5wza4rRoeA\nJ/coLT99VsbyEzX0dgFPkEfxBpbneXZRgp2SPLesjI1IoGVFDRVup4YvPpHCgdjMAs4q/372bkbz\nFh/wzanFtE0847C/cmaCw7Y0hYZTLpVpnnLRtq3rrWN8ceZzpjQaygb343gu2IXyxCG7leV73/7L\nz1WNF7HGznj06oVcJfDuLkoQBEG4L8TnmpD2opNRvjG5Rmn5u2R9D/eqrqNXNR0/XTJS2UXBaw3c\nilWXQoVLaWlpVK1alYkTJ/LWW28V6wnLqzuji77qWIHTCSbe/zvJbn/XqlomNPEoo9oVly9my0ec\n27ueKhGb0d+KzvPIFL/qnBj8LhmeviQtnYDHlUjbvkHRf/B83AEksynP8wtSJfMWVSLWQcQ6LDXq\nYmrfA3P7nqASU0IJgiA8aOKMuQKeJPvRv6kmK8mm7J4UjQIMmqwcH4Uk8XVnb66lWqigVaBT3f0I\nLShkwOPi4oKPjw8eHvfrF37h/HghnR7V0lh0IoWMHEGol1bikzZe+LnkMTHA/WLA81j6P0v6mX9Q\nhYeh+msPkjG7udDUoSc8P5pgbVZzo/T2bKwzRqGIuWY7pjjBTm7KC2dQXjiDJXw7xhFTkH0rlVjZ\ngiAIQtlzbOExY5VlFLcTl3PPwVNRr3RIaq7sWjLfvYX+Wd2vXz82bNjA0KFDUZTisgVl7dXfb2HN\nlbYzr6Xh/g927lAosNRvhqV+MzJeGIPqr70orvyLpUFzLI3sJziUPSuQ/tZc9NNHokh27PoCsFSv\njTWwDlnjsJyTkdkVGUe76CO4WxxzfJTnT+Ey5VWMr7yNpUX7Yl2eIAiCUH7kDngyLFlLSdwJYm7k\nmoPH36X04otCBzy9evVi7969dO/enRdeeIHAwED0esdx8s2bNy/RCt5ruYOdvoE6p/MBPBC0esxt\n8s+3kv2qYHxzFvrZbyKlZ62fZfX0wtyqC+a23bEG1CzUU/1+KIln/o7lidiDvHBjL48lnERB9ost\npaWg/2QKmY8/gdSii925kYlZrUq1PdUIgiAI949bThaVvpBstgU8ufN3KupLr3Gh0AFP3759bf9/\n8OBBhyYnWZaRJIn4+PiSq10Z89EpmN/K4HCt/zXWGvVIm7UK5d8RyD5+WZMiKouWc9Ovhp55R3V8\n49+Ob/zbUSPjJkdTv0N/dJ/dcZpdG6hz/BDSgFexNGnJjKPpzPsna0LLyQ95OExyKAiCIJRPsiw7\ntPAAXEw208ZfCzifdLC0FPpba/HixaVWifKguY+aQzft81M+bG3AJ68FPf5jZIM35scKGoOVt2Av\nFXU8VZxNzEpYu6D1YWWnSQwJ3oZm7VKkHMtYuNy4BB9PJsPFk8peLWnm346/3QKZdSSJV+q5Fmst\nFUEQBOHeSDXLdvmwd1zIMYlt7mUl/MpDl9Zzzz1XapUoD5a086LjlljbvDsDg/T0rv6AdmWVAUmS\n6FdDz5wj2cuPbLhoZFD3p7HUboju02kobt6wO0eblsgbaWG8cTWMw26BjKjzClsvGXi+tuu9rv5/\nlhQXjfbbxdS+cRXl069gaep8FnCn5ybdQvPDFygunsHctjumrv3hP95aKgj/Jc5adyCrheeO3EnL\nfqXYwnNXodT58+fZv38/iYkPziKRdQxqdvb05YU6Lkxp7sHiAmYDForuiUD7AHL3tQzijRasQfVJ\nC/0C88Md8jz3oZSL7PjnA/45fKq0qyncJiXEoZ85FtVfv+N25Ty6j95Fedj5bNy5KU8eRv/uK6h/\n/xnlpfNov12MesvXpVxjQRDKk3hjYQKe3JMOloMWHoAffviBadOmce1a1jDlDRs20KFDB+Li4uja\ntSvvvvsuTzzxRKlU9F4IrqDm4zYi0Ckt9b3U1DeoOJWQ9Wa3yLAlysiLdV3B1R3jqGkozp/k3Lq1\nBJw9gJfZfmV2T0s67+6aQWKbxXhWrVIWl1C6zGaUxw+gDg9DeewgZDguwCr7V8X0aGfMbbsVaxi/\n4uwxdMvmgNlMZs/nMHfsZd/6kp6GbkEIitjrtk2SbEX3aSjpb8/HWqeR84KtFjSbVqHetApJth8B\noP3xq6yu0fY97rre5YnyxF9oV34EFhOZvQdj7tBTtGAJQg7OEpYBLiRlBzmOo7TKQQvPpk2bGDZs\nGHXq1CE0NBQ5x4eZt7c3derU4bvvviuVSgoPjn65RrxtyLWq+s0qdXm8ylCqtlrMwAZvsL1CY7v9\nlTMTcFnwDqQ4aV00m8CY5ri9JMkypCZn/beEKC6dQ/PtYlzGPY3+w4moDu5BMqYhybLDn+L6ZbQb\nV+D61rPoPxiD6vefIb1o1ywlxKH/aCKK65dRxF5Ht2I+2k9DIe328iNmE7pPpqCMOut4rikT/UcT\nka45Lkwr3bqJbvabaDaudAh27tAun4fyyD7HHaXwupJhBGvpLPqrOHsU3YcTUURfQXEzGt3yeWiX\nTIfbIxkdWC1OA1hBeJDl1aUVl2ElKTNrX7ns0po/fz4dO3Zk/fr1TvN5WrRowfHjxwv9xF988QWt\nW7cmICCAgIAAunTpQlhYmG3/iBEjMBgMdn+PP/64XRkTJ04kMDCQ4OBg1q5da7dv27ZtdO/e3S4w\nE8pe7m6t369nEJujSXPC/kTiTRIZSg0/VnyUvo3fZkv9nnbneMVdQb8gxPaFpjx2EO1nM3Ad0QvX\n13qimz0e1R87SvQLRroWhWbtUlzGPY3b671x+b8XUG/5Giku7zXI8i0v6RbqsB/QTx6Ky+ShaMJ+\nQJF0q0hlKM/8g+6rObi+8STape+jPPFXwV/wsox2+Xyk1GS7zeoDv+EyZRiKf0+j/XI2qhN/5V33\n1GT0cycgxceCLKM4fwrNqo9wmfgiqtNH7J9OkpBzjOiTrFZ0i6eiOH8y63H0FTQ/foXLW89kva4T\nnke9YQVSjpalIklJRL1zPfqpw3Eb1h2Xt55zHmAVg3T1IvoPJyKZ7JeeUf/5Ky5TXkVx4fYSLlYr\nyhOH0H4+E9fXeuI6ohfaFQuy3reC8B+Qe5blnC4mmzFZZbtjJMC3FLu08lwtPTd/f3/ef/99Xnnl\nFeLj4wkKCmLjxo106JCVd7Fq1SomTJhAdHTeyxbktHXrVjQaDUFBQVitVtasWcPChQvZvXs3DRs2\nZMSIEVy/fp2lS5faztFoNHh5ZXU5bdu2jTFjxvD9999z/vx5Ro0axYkTJ/D29iY5OZn27duzZs0a\n6tWrV9TXRChlbTZGc+JWdh9ukIcSD40CsxWOxduPlHu7qTtPVtfy7wdTGBD7p90+S2AdpMR4FLdu\nOn2eVJWOX6u05GCN1vSo70PjCkWfx0d56Ryq8DCUF0473S9LEpb6zTC37Y65RTvQ5pPobspEeWTf\n7S6rP5EsJd/6YK3gi7l1V0ztuiP7BzjsV4WHoftiZpHKtNSoR2ylGvhHbLN/Lv8AUChQOGntgaz5\nmjKGT8rqHlv0nl2rj+zmgbVSNZSRef9IstRtgqltt6znKYCUdAv1vl0o/46wG/F3R+b/BpLZ/9Vi\nL2Eixcegnz4KRXzega6sVGFu3QXliUNOj7NUCcQ4cmqx15ITq3KXT+K+ZJv1dxKzjiQ73bfysQo8\n7KuhwdrswSo+OgXnni29GfcL/a/fxcWF1NQ8mmuBCxcu4O3tXegn7tnT/lf75MmT+eqrrzh48CAN\nGzYEQKvV4ufn5/T8s2fP0rZtW5o1a0azZs0ICQkhKioKb29vQkNDGTBggAh2yqkna7hw4lb2WmXn\nkyyA45d/owpq3mrsjkYpMbzlaHz3JvNYwknbfuVFxy6XnFzNRnpH7aZ31G7YXUKVz0WSZVQnD6M6\neRh5lR5ziw6Y2nXHWqcxKBRZLSAXzqAK3456/69IqUn5lifrXTE/8ljWF32tBtjNYJ2eiurAb1kB\n07kTTs9XxMei+ekb1Fu/xdTtaTKffhVUWYGeFB+D9puP7Z9PoUCy5v0rzOpXhfTxs7h+IwZvrQr1\nb1uyn+vG5TzPMzd4iIzhk5ANWZ8JGYPHolv1oW2/lJKUb7ADWS1YyjP/5HtMYWm2fY/y7NHiLWGS\nmoxu/jsOQYzVswKKxOz5xySLGfXebbnPtlFevYjL1OFkDB6LuV13kfcjPLDy6tICiEo2U83Nvvuq\nNBOWoQgBT/v27fn222957bXXHPZdv36dlStX0qPH3SUjWiwWNm7cSGpqKo888oht+759+6hVqxae\nnp60adOGyZMn4+vrC0DDhg1ZsWIFCQkJXLx4EaPRSM2aNTl48CDh4eHs2bOnSHWIjIws+CChRDST\nJCD/If8qSWZi9SSi/s3K1WnppeKphuP47e/pNEm9dA9qWXSSMR11+HbU4dvJ8PQmqXZj3C6eRn8z\n/+4ZWZJIrtGA+MatSKjbDFmtydpx/l/Hg6vWh2fqo427QYWj+6hwbD+aJMfJPiVZRrN9LaajB7j4\nxDAyDT4EffcxUlr2jxarSs2Zlyfic/h3fP/6zaEMk6sHZ/uPJDM6FiSJ4616UePaZQxnjjgce4dZ\n70p0q27EtOwGsfFZfwDVGlCpbU/8w7fm+1qUJuX5U2jffYXrHfpg0Rd91WWfQ3tQXrlgt+3mQ+25\n0mUgVXb9gO+h3YUuS8rMQPfVbOL/3MPlHs9j1eiKXB8Qn1vllbgvWaJuasgrzDhyJQ63NAuQ/d53\nlzOK9doV1LJW6C6t8+fP07lzZypXrky/fv2YNWsWr7/+OiqVipUrV6JUKvntt98ICCi4+fmOEydO\n0LVrV4xGI66urnzxxRd069YNgB9//BG9Xk/16tW5dOkSM2bMwGq1snv3brTarBkaZ86cydq1a9Hr\n9YSEhNC9e3c6dOjA/PnzOX36NEuWLEGv1zNnzhweffTRQtdLKH0zDiUx/2gyzt58CmQ+auPFC3Wy\n59uJTDTx8PoYKmXcYu/hqQRmZHdjpSi1/OjzCKv92xGr9mBQdDjPRf9Blcyi5cQUxNzgIcxtumGp\n3xTV4T9Q/RGG8k6+xl2wVA7E3LYb5tZdkL187q4QqxXlqb9vLwb7O1KmY36I7OKK+eGOqPfYBxsZ\nz43E1O1pAJQH96BbNscWEMk6PekhC2+vk5ajmT4zA/2cN+1aZ2SlEkvjlpjadsPSpCXcCdgcKiKj\nXTYX9e8/278OdRpnnduwBcqjf+bbglWol8Q/IKuFrEoNtKs/QhEfe9dl5cf8UFuMo6eBIutXqurP\n39Aun2dbggVA1mgxt2iPudXjqPb9gjpih0M5lhp1SZ/4MWi0RXp+0XVSPon7ku3JsJv8ei3D6b7H\nKmvpF6hnTET2Oo3P1nJhSbvSGyld6IAH4MyZM/zf//0fe/bssUsGbteuHQsWLKBWrVpFevLMzEyu\nXLlCUlISmzZtYuXKlfz00080aNDA4djr16/TqFEjli1bRp8+fZyWN2/ePK5evcrQoUPp168fe/fu\n5eTJk4waNYojR46g0eTxQSyUieg0C1dTHbuyLLFRPNzA8QOj7aYYjsebqJwRz5SLP9LaIPONSzCL\n9M1JVWX9SvDVKVjVqQJarHhF/k30LztwuXnVVoYkQUMvNS6qwjWdyhoNlnpNMbfpiuzj77BfunoR\ndXgYqoidKBKc5xLZlefqgalV1rBya2Ddku3OSE9D9dceNBtWoIjLP5fOUqcx6SEfZXW73SbFXkez\neTVSeiqZvQdhrZ59D+w+xNNT0WxejSL2OpY6jTC1fBw8DIWro8WMeud6lGePYQ2oial1V2Q/xykG\npBuXUYeHoYg8jmR2zMlxoJCwBARhbt0Fa1CD7Nc1JRHdF7NRHYkoXP0KyVK7Ielvz3cIUqSYa2i2\nfI2UloK5ScusuaX0twN3WUYVvh3tqoUOgWlmz2fJHDC8SHUQX6zlk7gv2TpujuFInMnpvkB3Jc/W\ncmHm39k5PuMaufFeC89Sq0+RAp47EhIS+Pfff7FarQQGBuLjc5e/TnPp27cvAQEBLFq0yOn+xo0b\n8/LLLzN27FiHfefOneOpp57i999/Z82aNezbt4+VK1cCEBQUxObNmwkODi6RegqlK68PjAVHkwk9\nlJ0Do1FAZq4u4m86VaBnjhmyY9IttNwQY9eX3LiCml96+6JWlGCwYbWgPHEI1d7tqA6H243gyW4B\n6Y6laUtbTk2pSUlC9+VsVH//4XS3rNGRNuMrp4FGXu7rD3FZRh22zmEJk7tlrVydtEmfgJvHXZ0v\nXb2IbvFUlFcvZldRUpD+7idYaxX+M+q+vicPMHFfsjX+4QaXUpwPzlBK8HxtF1adzZ5WY+YjnowI\nLnp3c2EVOodn9uzZ9O7dmwYNGmAwGHjooYfs9p86dYrNmzfzzjvv3HVlrFYrmZmZTvfdvHmT69ev\nO01ilmWZMWPGMH36dDw9PbFarZhMJts+k8mEpRRGxAj31hOBeruAJ3ewMyBIbxfsQNbKuwtaGXhp\nd3aey9F4E/P+SSak2d19YTmlUGJp9AiWRo+QkZaC6sBulOdPYg0IwtyyE7LHPZzQ0s0D45gZqHf+\niOa7zxy+5DMHDi9SsHPfkyRM3Z/GEtwcVfh2pDxG9RWG7ONHZo9n7jrYAZCrBJI+6RNc3n3Z1t0m\nyVZ0X84iLfTLIndtCUJ5lXviQb1SIt2S1cZikeFQrP33vX8prqMFRQh4Zs2aRc2aNZ12N0FWwDN7\n9uxCBzxTp06la9euVKlShZSUFNatW0d4eDhr164lJSWFWbNm0adPH/z8/Lh06RKhoaH4+vrSq1cv\nh7JWr16NwWCwdXW1atWKmTNnsm/fPo4fP45arRYR9wOghoeKpt5qp02klVwUzHnUebdKvxp6nozS\ns/5C9rw88/9Jppqbkgo5FiL10Cho4atBq8y75Schw8rFZDN1DKq8u8Vc3DB37JU1e3EBLFaZg7GZ\nec5IWhh1DWpqeuT6pyxJmLr2z1qnbHEoitis2dGv125BeK2ucKlocxSlJymoaZVRFrFVLDbdwr9J\nZh7y1eTbopZqsnIs3kQDLzUemtL50LMG1CTz2ddLpewic3Un4+UJ6Oe9bdukuH4ZzY9flZ86CkIx\nZFpkkk3ZHUgKCRpWUHEwNvvz++Qt+x9jpTnpIBRxaYn8pKSkoFYXvqk+OjqaYcOGERMTg4eHB8HB\nwaxbt47OnTuTnp7OyZMn+e6770hMTMTPz4927dqxfPly3N3d7cqJiYlh7ty5dpMWNmvWjHHjxjFo\n0CDc3NxYunQper1YCPRB8EQNvdOA5+M2Xvmuoj6vpSfhNzKIuT2rp1mGkeEJDsc181GzpbsPbmrH\nsk7Em+i/8ybX06zUN6hY382HSsWYBj3TItNzW6zdB8Dd+qi1gZfqOi6qaq1Rj4lPzCdh9y5kYLV/\nOzJ/c7zugun43614vu5UodBBz5/RGTy9K46kTJlgLxW7elVEr3I891qqhQ6bY4g1WglwU7Kluw+B\n7iX20VRuWRo9gqlDL9R7frJtU4f9gLl526xpDfIgRV9FtW8X1SNPouz4PywtOoih7UK5k3tIupdG\nQQ0P+4Andz5NaS4rAQXk8Bw/fpxjx44B8PrrrzNkyBAefvhhh+MSEhJYtmwZWq2W8PDCLS4oCHnJ\nrw88KtlMk3X2CbmDa7vwSSEWe/35UjrP/eI4hDu3V+q5Mr+VfWtRhkWm4+YY2zpgAF2qaFnbxRvp\nLr9s1pxLY8TekhlJplHA7j4VaeBl/6Nj++V0ntlV8DUX1vSHPRjd0L3A45IyrbTZFMPlHP33H7Yy\nMKSeY1D2zv4Elp7KHtnU2k/DT//zQfFf+BJPT8Vl0st2SeZWvyqkTf/SfhLL292k6j/CUJ49ZleE\nqdXjZLw4HvQu96rWQj5EDk+Wk7dMtN6YPWdVbU8VT9bQMzuPiQgBrgyq5PTHZknJ92fUTz/9xOzZ\nswGQJInly5ezfPlyp8caDAY+//zzkq+hIORQ3V1F16padlzJGupYzU3J+48ULqu/RzU9z9Vy4dtz\n+a899dXpVHpX19Gxcvb8ELP+TrILdgB2Xs1gdWSa3fD5oth4oeTW/cq0woi9t9jVKzsZ+1aGlTF/\n3E1rTt5mHE6ia1UddQ35t+ZOPphoF+xA1rppuQMeqyyzKdd6ahHRmXx2MpXXSzF5sdzQu5Lxytvo\n57xp26SIvopLyEvIdwIYWUYRc81hKYs71Pt2ofz3NMaR79mNrBOEspS7haeCVpFvy62bSirVYAcK\nCHheeukl23pUnTp1YuLEiXTp0sXhOFdXV2rUqIGqmNO2C0JhfNrOi4XHUjBaZMY2ci9SzsdHrQ3U\ncFdy6KbJrjn1n5uZ3MixiN2o8AQi+lXEQ6PgYEwmC4+nOC1v0oFEOlbWUs2taO/9hAyrw/wUnato\nURUhRybDIrM7Rxn/xJlYcDSZd5pmJdS+vT/BbmE+pQSPV9EWuftjX3QGSZny7efMCqx29PTNs667\nrhhZedYxmMvqUrRQMUc//b5o+9f9jtBDiXSpqqW2ZymPaCsHLMHNyezcD80vG23bCppWIDdF9BX0\n018n49mRmDv1FV1cQpmLNzoGPDXc8+6y8ivlhGUoIODx9/fH3z9r7pEtW7ZQr169EhuCLgh3y0en\nZPrDdzdXg0YpMaGp4wib/dEZ/O/nm7Yg6EqqhUkHEpnT0sDr4bew5tHxm2ySGR2ewIZu3kXqgtkS\nlY4px+dBbU8V6+6ie2zIb/F2K87PPZJM9wAdUckWfvjXvuVkfGN3Jj1U9NFFP5xP49Xfs7veDt80\nsfBYCm82cezaSsiw8sYfzrvprDJsvpjO0PrZLTcbLzhPnjZa4PW9t9jew7fIidL3o8wBw1Ad/RNF\nIRdNtdRuSGZCPPrbyegAksmEbtVHyGuXglTAl4dKhbnRI2Q+PQy5gm9xqn5vyLII4u4zuQdiVNDl\n38JTsZQTlqEIq6WPHDmSAwcO5Ll/+/btNGnSpEQqJQj3Wks/LaMa2nehrI5MY8DOm0Qm2ndl9a9p\nnwC/53oGy8/kvc6cMxtzdeM8UUN/V7lA81p54qvL/mdsluG1328xfp99V1ajCmomOAlQCqN/TT2P\nedu/BrOOJHE83jHZOuRAItfS8h5xlnOknMUqsykq79FiB2NNLDrhvGXtgaNzwTjyPeR8hrtbffzI\n7PsCqXO+Jv3dRZx5eRKmjr0djpOM6Ujpqfn/JSeijtiJy5ShKP/508mzCULxxDnp0vLTK3BxMnAB\nwP8eBDyFboe/dOlSvouHpqamcvly3osJCkJ5N6mZBzsuGzmTI8DZe8M+b+LFOi582NpAdJrFbt+U\ng0l0rqIr1OiiOKPFrisKsuYYuhveOiUftTbw/K/Zicm5c43UiqxuQE0+w+3zI0kS/xeUydEUje1D\nzHQ7Z+iXXr62cn++lM6aXPlR/WvqWZejpWlfdCbX0yxUclHyR3SmbdQcgLtaopWfxpafBfD+7Zyh\n+l4PfteWtUY9Uhf+iOLGlawWjRxkjTZr0dMcM2PLag0ZQ97EUr9p1pIWxqJNNQAgJSeiX/AOmT2e\nJfOpV4q9mnypEa079x1nXVqSJBHopuRkguMEoGXepZVbfr9Az5075zBkXBDuJzqVxJJ2XnTZGovF\nSRdWgJuSGY94opAkFrX1os3GGFLMWQemmmW6bY21a5bVKKBrgI4JTdzturt+ijLalV/foCrWF3rP\n6noGBOlZe975F97bTdxpVKF4AUMFDSxobeDF37IDq2PxJlpuiMb1dqLhxWT7D7EGBhWL23pxLtFs\nm0pABjZdTOe1Bm4O3Vk9qukIbeFJy43R3MrIeoEyrdB7+0274f8qBXSqrCWkmUeeeUS/XTXy2ckU\ngjxVTH7I0+lw+OK6mGxmysFELiQXblJTX52CN5u408Y/n4kFVWqsVWsUqR7mlp2xBNZFu3ohyhOH\nkOSiz+mk+XnN7dXkJztdQqVM3An6RLBzX3KWtAxZA0+cBjxl3cLz7bffsmbNGtvjefPm2ZZryCkh\nIYGTJ0/SvXv3kq+hINxDD/lqGNfInXlHHYdOLm7rhbs6+x/t+4942i18F51utUsSBjh004RVxm5W\n5/W5vuj71Sj+HFFzHjWw93oG13N1JzXzUTOuccn8EOkbqOepGnp+zFH/f5MtgOMXvkrKalXSKiWH\nuZM2XkhnaD1XNkc5duv5uSiZ39LAy3uy84BuGq3czPVr8e+bJowWnI7Q2x+dwVM747Lyrq5kcDnF\nwqrHKtz19AHOpJis9Au7ycVCBjt37IvOZG9fX2qVcDK27F8V44S5kGGEgpbPkGXUv2xEs365XXCk\nPHcCl5CXshY7bdcdS72mdi1KZUIEO/cth4Dndtd7DQ/ngY2fvvTfa/k+Q3p6OnFxccTFxQFZkwve\neZzzT6fT8fLLL7Nw4cJSr7AglLa3m7oT7GX/W+DV+q60r2T/y/yFOi5Zo54KMP+fZI7czOr+ik23\nsPdGyXRn5WTQKvi4jf1cRFolLGnnVaSRXwWZ29KzUB9MbzZxp6lP1mK9/XJd3/6YTL4/n2YXxHho\nJDrdngbgyZouDuc48+mJFCJyvZapJiuv77VPMt8SZbTrVisJ7/2VVORgByDdIvP63gQseWXBF5dW\nBy5u+f+5umPqM5j0kI+wetkPQpEyjagjdqCfPR6Xt55Fs+5LpJhreTxZKZFlpOuXUFw659C1l5uU\nEEERidgAACAASURBVIfiwumCgzzhnnNIWr7dwhOYx4jW0p50EAoIeF555RUiIiKIiIggICCAOXPm\n2B7n/Nu5cydz584VI7iEB4JGKbG8YwXbEMouVbRMbe6YTCrd7tqq65l/z7BZzhpxlGGR2RyVbvdl\nHOylok4Bc9oUVpeqOt5r7oEE6JRZLVL1SqjsOyrolHzVsQJu+XQRdauq5c0crUrV3VU097GvR8iB\nRLvHvarp7XKM5rfyLLAbTgZGht8iNcdwt2mHkm63OtmbsD+B62kls57e7mtGvjpdtCT1nA7EZpaL\nZGxr3cakTf8Sc5OWTvcr4qLRbPkal/8bjHrrt2C9++VPikK9aRWu//cCLlNeRTf3LaSEOMeDLGY0\n677EZezTuEx9Dd3Hk8Eq1kssT+Kc5PBA1hJBztyLLq27Wi1dEEpTeZmp1GiWSTJZ8dEp8h1ybrHK\nRCaZyciRmPNPnIk3ck36N76xGwdiMgnPkew8+SEPp8O7i+NWhhWFBJ4luCZV7nuSZrZyLtHsMDW8\np0ZBdTelQ/fRouPJvHswibys6+LN41V1dtusssy5RLNtsUGAyEQzQ/fYD3t/tZ4rc1sZ+P16Bn22\n570waLeqWr57/O5nxgZIzLTSZmMMV1Kzv1xruitZ1rFCvr0vHxxOIixHMrZGAXv6VCxW7laJ/Tux\nWlH/shH1z2tsi5k6Y270MBnDJpbqQrjqnevRfv2xffU8vcgYPglLcAsApLgYdJ9Nd5hx2vjq/2Fu\nW/ZpFeXl86us1fz2ul231pmB/vi5KDmXaKLF+hiH488964+PrgyXlsgtMzOT7777jr179xIbG8u0\nadNo0qQJCQkJbNu2jfbt21Olyn9oFWahVDwoHxiv/R7PdzkSiRVSVgt9zn9wh570I6iAFqLyoLj3\n5HKKmUY/OJ9Mz6CRiHy2Ur6Li+Y0YV8CX+RqYfmmUwVCDiRyKcfszjpl1nw+OS1qa2BQ7bubGRtg\nVPgtvo7MHokmAdt6+NDSL/+uzRtpFlpuiCYhM/vuN/VWszPHzNhFVeL/TqwWlCf/RhW+HdWhvUiZ\nGY6HGLwxjpiMtV7Tknve25QHd6NbPA3JSTeWLEmYeg/CUqMeui9nI6U6Bs/WChVJm726zFebf1A+\nv4rDKsv4rLxm15od80JlNEqJDIuM/6prdp+DKgliXqxc6svJFPqTNj4+nt69e3Py5EkqVqxIbGws\nCQlZv2A9PDx4//33OX36NNOmTSu1ygrC/WTWo1mtDnfmpcmdttG4gvq+CHZKQoCbikd8NRyIdVwe\noXd1fZG+9Ke28GDXVaPd6KhBv8bbfYBKwA9dfHj/cBL7Y7Kfc+KfiXSspKVqEWfGBgi7bLQLdgBG\nNXQrMNiBrPyEea0Mdq1TR+JMfHg0mbedTIRZJhRKLA1bYGnYgoz0VFR//ob2h8+RUrKDC0VCHPpZ\n4zG3647sZp8wbq0WhPnRTneV6Kw4fQTdZ+87DXYAJFlGs3l1/mXEx6D+ZSOm/w0s8vMLJSsxU7b7\nvPNQS7Yua61Sooqr0q6V1E+vvCdr5xX6nfnee+9x+fJltm/fTkREBHKON6ZCoaBPnz7s3LmzVCop\nCPcjZ4nEOT1ZAqOz7idP5HG9RX0dXNUKPm3nRc6Px9xfk681cKVdJS2L23qhz5EblGSSGf1Hgt3n\nV25WWeZQbCY/RaXb/jZfTGdMrhmk63qqmNSs8MHKUzX09Klu320350gyR+Ocr5FVpvSumDv2Im36\nl1jqNLLbJclW1L//jObnNXZ/us9moPmh6OspKi7/i37hJCRzjlW0lUpMbbsjF/AlaM3VvabZ8jWk\n5r04pXBvxOVqWvXS2ocagbmWmKh4D+bggSIEPNu3b2f48P9n787jqizT/4F/nrNyZBdZXFA0dzRF\nUwSXQk3JBbXMSu3bOC2/rEZyTZipSW0klSzHlKFFK3UsIzWtXJrUFAUzEzdccMMsA1RQEM7+/P5A\nDzxngQOyHOjzfr14zTz3s5z7+FRc3vd1X/f/Q3h4uN058Pvuuw9Xrlyp0c4RNXRDW7nhmY72d7Gu\nieXoDcmYEA2s/8vhp5ZhYPOqT0FEBKodbi7a3kuBN3qXjj7c563Amw9Ig5Ldv+uw+oz9jVtFUcRL\n+/Ix5Js8TN51w/Lzf7tvSPb8kgulK+DcqlDfRxAELI30QTOrythT9+VDb6/wkwsQmwagZO670I+e\nXGnwAQDK7Rsg/OF8AVrheg7cEudAKJZOUer+Ohu65+dCO+cdmL2b2vZLJoNuwgso/tdqiJqyKUrh\ndiFU3663uZ7qlqMl6Xe1tSrQWhcJy0AVAp7CwkK0atXK4XmdTgeTiVnyRNbe6uuNYA/pv9C9mimd\nqsrcmLRwl6NfoErSFhPiVu1l8//o5YWOVlOCsjuBSPlCg893cceAIOnnvn7opk2hRABYd65Yknfl\nyPTunujlr6r0OmvN3ORYGuEjaTuZb8Tioy48KiFXQD/+OWhnLobZ06fCSwWzGeqUj5x7btEtaBLn\nQFYgTTTXPf68JfnY1LUXShZ8BOOdhGWgNFenJP7fMIycCHj5QD/iScn9yp0pECpIvqba56jo4F3W\nK7WC6qAGD1CFgKddu3Y4cuSIw/O7du1Cly5daqRTRI2Jp1KGFQN8UX5nh2c7Vz9xtiH7f+U2DlUI\nwF86Vf/PQXOnMray3H/Fpnf3QJ8AaSBytzJ2+aX0t40iXk7Nh7nc1NaVIiPiD0qXy9vTvakSc3pW\nf2VdTIgGj1vtx/busUL8Yie/yZWYuvdB8aI10L4QD92EFyw/+iFjJdcpDv0I2fnMih+m10Hzbjxk\nv2dLm4eOKw1kyhG9m0I7azFK5r4L7dTXUbzwE5g7dLOcNwwfLxkFEgx6qDbbFsitlNkE5Xefwy1x\nDpTfb+Qy93tgb1uJ8h4Jlk7tPmy1QrO2OP1XzGeeeQavv/46IiMjMXjwYAClQ7TFxcVYvHgxdu3a\nheXLl9daR4kaskHN1dg4zA8pF0rwgL8KE9vbn+Zq7Ma21SDZ7Iv9f+gwJkSDHn5VHyUpr7e/CjtG\n+OO/54rRranS4fRhiKcCC/p4Y3q5TVX3/6HHB6du48WuHhDF0tyeW4ayAEgjFxBlVVgyxFOOmfd7\nVntfsrsW9yutjH13msx0Z2rrx5iAKk2T1Tl3Txj7D5O2mc2QXzgF+cUzlib1hmSUzH3PfqVkkxFu\nK+dDfu6EpNnY50HoJ71i/x6ZDKYuYfb7pNZAP+4vcPtkqaVJsfc76KMfh9iijXPfSxShWrscqh82\nl95//CfID++D7sV/QPTxc+4ZZFHZCE8XXyW+GuaHLZdKEBGoxojWdRPwVGlZ+vTp0/HJJ5/A09MT\nhYWF8PPzQ0FBAUwmE5577jksWbKkNvtKfxJc1ul6GsM7EUURj+28jl3lNm7VyAXsG+OPvVf1NjvM\nLwr3xv/raj9PqCbs+FWLJ/4nLao3rZsH5vex3S7DHld6J/LMX6BZNEPSVjJjEUw9wqUXiiLUnyyF\ncs9WSbOpcw+UzFxc/SXlRiOaxP8FspyyPFJR4w5RXTaSJnp4whj5MAzREwC59O/6yq3roE750Oax\nZk+f0hpA3fs43RVXei/1Zf7hm1h6rKy4ZlyYJ15zgdWI8rlz577p7MXR0dGIioqCUqlE06ZNERgY\niKioKCxYsADPPvtsLXaT/kxu3LgBPz/+rcqVNIZ3IggC+gepsDarGHf/AmoUgfQcPb66WIJyBZsx\nIEiFxAifGt1/y1p7bwV+vW3C8Rtlq5N+ytUjqoVzy+Zd6Z2I/s0hO3cSsnLbUMiuXITxodGSERvl\n159Btf0Lyb2mVu1QMmsJoLmHUU+ZDGafplD+tMfSJBgNELTFlh/ZrQIoTh6GPPOX0iKGTUqnUxX7\ntsHNqtih5Rl6LRRp/4NgNMLU6X6nlty70nupL5sulkj2zxsTokHvauS81bQqZ02Gh4cjPDy88guJ\niFxMKw8FEsK98XJq2WjOsXIBBwB4KEpzfuqiLsjCvt748XedpSaJCOCl1HzsGxOAJop63rizivQT\nXoDixCHLsfzX81Ck/Q/GyIchyzoO5d5tUO7bJrnH3DQA2pmLAPd7rzZueuBBmNp1gfzCqQqvk2ed\nQJPXn4P2hbmAIIN6VcUzE4IoQrV1LeRZx1EyPQFwcyIwM+ghzzgAZeoOyE8fhblFG2j/Nh9iU/+q\nfKUGq7IprfpSpREeoHS11g8//IAffvgBP//8M/Ly8hAUFAS1un6rW1Ljwb8huZ7G9E66N1Ui47oB\n52/Z33ByUbgPolrWTU6Bm1xAFx8Fvii3MixfJ+K2UbTZasOaq70T0ccPQs4VyK9csLTJzp2EcvcW\nqLZvgPzyOen17p4oiXsPYkCLmumAIMDU6X4oMtIgFFe8V5lg0EGZ/gMUh36EUG51sahUli6F928B\n+ZljEMpVeJJdy4FQeBOmsEj7DxVFyC6chua79fBZ+x6U+3dC9scVCEYDZPnXIPv9EoyRw+zf2wCZ\nRRELjxTinaOFEAB0K7f33cenb0uqnk/p5O5wD626VKUe/Pvf/8bixYtRXFwsKdzVpEkTzJkzB7Gx\nsTXeQSKimiQIApZF+ths9QAAg1uo8ZdOdZtQHtXSDX/t5I5VZ8pq0SRn3saznd3RwbtmN3+tbfpH\n/wrFT3sg3Nm9XHbzht3rRKUKJa8udD6p2Eli89YoTlwP4eYN6Waneh3Ua/8NxfGfJNdLih0KArQv\nvg5TlzCYuoTB3Ol+qP/zFmTlNi9V/vgNjH0GwdS9r/SDdVq4rZwPRcYBOPqnR3H8UOl0Wtde9/o1\nXUJy5m0suVNOYe9VHbr4KiyLECqrw1NfnO7F8uXL8c9//hNhYWFYvXo1UlNTkZqaik8++QRhYWGY\nN28eV2kRUYNwd6uH8ryUAv7dv3bzdhyZ38cLbcrVahIBfHmh8npArkYMaAHD4JgKrzH7NoN2+kKY\nrSo41xhBgOjjB7Gpf9lPUCtoZ7wN3YQXIDrIw9E9HQvTA4Msx6YuYShZ8BHMzYMl16k/Xiyt5mwy\nwm3lPCgyDlTaNdWGD0o31GvgRFHEJ+UCdBHAN9lay3Fly9Lri9O9SE5ORlRUFLZs2YIxY8YgNDQU\noaGhGDNmDLZu3YpBgwYhOTm5NvtKRFRjHmurwcz7S1dheakEfPxQ02rtsVUTPJQyzOohzWPZfLGk\nwi0wXJUh5mlJ9WMAEBVKGPs8iJLpCSh+53PLzud1SiaDYeRElMT/G+amAZJT+tGTYbSqJwQAopcv\ntM/HQRTKflXK8q9B/d8Vdy4oXXWmyEizvdfDC4b+wyVt8ounIf/5xxr4MvXrVIERZ25Kp4R/urNn\nnSiKLpvDU6XNQ0eMGGH3bz+CIGDUqFF44403arRzRES1RRAEvN7bG3/r5gmlrHSPrvo0uo0GM9IK\nLKvFzt404mS+UZIb0RCIXr7Qxr4F1VcfQ1SqYHzgQRjDowCP+l+WDADmDt1QvOAjqFM+gux8Joz9\nhsBgVa1Zcv19XWEY8SRU3/7X0qZM3Q5jn0GQXzgN5d7vJNeX+LcAnpoKU49+gEIJQVsMxeF9lvPq\nLz9CcdgAQFH/OS3VtfGi7ejj4Tw9TGYRJSYR+nLxjloONHGR2lJO/4n36NEDp0+fdnj+1KlT6NGj\nR410ioiorvi4yN8+fdQyRLVQY+eVsjpBmy+WNLiAB7gzHfSP9+u7G455eEH3lxmVX3eHftxfIM84\nAPlvlyxtbkkLIGilv/jNzQJxbuJ0tO1VVrdHN/45yH/ZD0EsjQJkOVeg2PstjIPH3Nt3qCeiKGKz\nnYCnyCgis8AIb5U0uGmqltXLNLE9Tv+bvmTJEmzduhXLli1DUVFZBnxRURHee+89fPvtt0hMTKyV\nThIR/RmMDZFuObHxYnGDnNZqdJQq6J6Pk+T/WAc7oocXSmYtgdFqvzGxRRsYB42QtKk2fwroqpGj\npddBsX8nFAd3AUb7qwxr2/EbBpxzsMLxp1ydy+bvABWM8NirtSMIAubNm4cFCxYgIKB0DjQ3Nxdm\nsxkBAQF49tlnkZ6eXnu9JSJqxEa01kAlK7BMCVwoNOHYDYPNFhy5JSb8eF2OTKX0l6ZaDvQLULvM\nqFVjYm7bCYbRk6H6+jObc6JKjZLpCRCbtwaysmzO68c+A0Xa9xD0paN3sps3oNyRAkPM0853QBTh\n9v4/oTha+jvWMGgEdM/Oqd6XuQebLzkO1H7K1dvshN4gAp5mzZrZDEP5+/ujffv2krZ27drVTs+I\niP5kfNQyDG7phu2/lq142XyxRBLw/JKnx9gd13DLoAZO2S77bt5Ehm0j/BHi2XBzRFyVPuZpyH/Z\nD/mv5y1tokwG7cv/hLl9qMP7xKb+MAwbD9U36yxtqm/Xw9hviNN1iORH9luCHQBQ7v0OhgdH2v9c\ngx7KHzYDOi2MUaMhevk69RmVEUURm+xMZ931U67eZiNQV1mSDlQQ8Hz77bd12Q8iIgLwaFuNJODZ\neLEEb/T2Kt2s2WjG83tvSDY5tXa12Iyp+/LxTXQzyGWukTvRaCiU0L0QB83CWAgltyEKAnR/mQlT\nTwfFCMvRj3gSyt1bINxZ0i5oi9FkziSYuvaGccBwGHsPBNQOik2ajFB/abvXl/qLZJTEL5NuuCqK\ncPv361AcO1ja5aPppflUTmyLUZmj1w24WFhWUFAtB0zm0i1aAOBioQlnCqTTXa40wuM6PSEiIkQH\nu0FdVpIH2UUmy75E836+hfO3TA7uLJOWo8d/Tt2u9DqqOnPr9ih+Mxm6p2NR8s//wPjgSOdudPeE\nfvRkSZMgilCc/Bluyf+C+7RHofrsPcBOlWhF6g7Ifs+2aZefPQb5UWkaiWL3FkuwAwDy85mQZdtO\nswEAdCVQffUx1B8mQHbpbKVfwXp0Z2hLN3T3kybV7ygXrAMMeIiIyAEvlQwPW21tsfFiCfZd1SHZ\nKogJa6ZETBs3xLRxQ2cf6YD9gsM3kXVTuk8Y1QwxqBUMQ8fB3LZTle4zDBkLUyv7aSCCthiqHzZD\nkzhbmtCs00K1abXDZ6q+/AAwlwbBQt5VqD9PsrlGbqdOEACovkiGassaKFN3QLNoBoT8aw4/RxRF\nbLLK3xnXVoO+VpuCWu9N19RNDlfBgIeIyMWMaytdrbXpYgleTs2XtLVQm7E1uhk+G+yHzwb7YdPw\nZpIlwVoTMHVfPoxmrvJyGSo1St5YAd2kv8HUpqPdS+TnT8FtxTzgzvYcyv9thKxcICIqlBDLTWHJ\nr1yE4sD/ALMZ6o8WQdBpbZ5ptwq0Tgtl6nbLoVBcBNXXnzrs+i/XDJL9sdzkwPBgN/QNqHgXdI7w\nAPjwww8RGRmJ4OBgBAcH4+GHH8aOHTss50VRREJCAjp37oygoCCMHDkSp05Jd8GNj49HSEgIQkND\nsWHDBsm5bdu2ITo6mks6iajBGR7sBo287JfaldsmyS8bAHijox4e5YolNm8ix+J+0iXRP+cZsPxE\nxRtpUh1Ta2AY9hhK5n+A4n+tgv6RJ2D2biq5RHE0HepPlgJFtySJzgBgGPYYjBFDJW2qjaug3L4B\nitMZdj9SfumszeiN/NhBm+BI8eO3EK5etvsM62KDw1q5wVMpY8DjjBYtWmDevHn48ccfsXv3bgwa\nNAiTJk3CiRMnAADLli3DihUrsGjRIuzatQv+/v4YN24cCgtLE762bduGlJQUbNq0CfPmzcO0adNw\n/XrpJm+FhYWIj4/He++95zIFj4iInOWhlGFYsNrh+Re7uqO3t9mmfUI7DUa2lk6HJRy5hcx8Tm25\nInOrdtA/ORXFi9bA1Fq6Alq59zs0WfAyhOJye1Y18YB+5EToH/0rREVZ7ozseg7UX/ynws+yyfX5\naY/NNYLZDPVXH9v2UxTxtZ3pLABo5S5H8yaOQwlXCnjqbd3iyJHSRK/XX38dH3/8MQ4dOoTQ0FAk\nJSXh1VdfxZgxpdUok5KS0KFDB6SkpGDKlCk4e/YsBgwYgLCwMISFhSEuLg7Z2dnw8/PD/PnzMWHC\nBHTu3Lk+vhoR0T17tG0TfH3JdnriPi853ujthd8u5tmcEwQB70b6IC0n17Kfkd4MvLg3Hz+M9ofS\nwaqttVm38cmZ2yiyWv0lA9AnQIV/9fWWjCaVdyhXj0UZt9DMTYaFfb0d5mwcu67HvMO38NvtypOu\n75W3SoapXT0w1mpq8C6DWcS/frmFg7l6TGjXBFM6u9u9rs5o3KGduQiaBS9Ddu0PS7Psj18ll+lH\nTQQ8vEr36RocA9XOr+w+TtS4wxg+GMo9Wy1tiow0GB8aVXqgK7G7/xcAKA79iHc3HsSXQgjuhtRG\nc+ko411NFAKG3Vl+LggC+gao7P6zCjTQgEen06G4uBi+vmXr+a9fv45PP/0UN2/exJgxY9CrV/W2\nvTeZTNi8eTNu376Nvn37Ijs7Gzk5ORg8eLDlGo1Gg8jISBw8eBBTpkxBt27d8Mknn6CgoACXLl2C\nVqtFu3btcOjQIaSmpuLHHxv+Bm1E9Of1cCs13BUCbhvLghCZACQN9EUTheNfIgEaOZZG+OAve8pq\n9By7YcA7RwsxN8x2P6tvs0vwSmqBw+dlFhhxXWvGmsFNbUbMzxQYMGp7HnR3fheeuWnE9yP9obAK\nrPJKTBi34zqu62xHpWrLwdwb+EbTDAOCbEfK/vHTTUsCeFqOHp18FIi0c11dEn38UDJ7SemoTtEt\nm/Nm32YwPPyY5Vg/+mko926DoC22uVY38RWY27SXBDzykz8Deh2gUkN+9CAEvf0ABQAG7fkE83r+\nXbrcvZzhrdwke8/1DVA7DHj8GkIdHmvTpk3D6dOnLYFEcXExhg4dikuXLgEAVq5cia1bt6Jfv35O\nf/jJkycxbNgwaLVauLu7Y+3atQgNDcXBg6VL6vz9/SXX+/v74+rVqwCAIUOGYMKECYiKioJGo8HK\nlSvh7u6O2NhYLF26FOvWrUNSUhI0Gg0WL15st3J0eVl2qmNS/eH7cD18J3VvgK8KO/LK/jM9uYUB\nvjcvI+tm6bGjdxIKYGgzFf53rezeJUdvIRS56OxRFkAVGIC//aIBUPHU/zeXtVh+4CIeCSj7W75R\nBJ49qobOVDaic+SaAa/vuYS/BpfVYhFF4LXTKlzX1f2Ewgu7crG+lxZNyg06HS6QIfmUdNpv5eE/\n4N9RX2Ofey//rjR5/GW0X/sO5AZpf36NHIEb2dL8msDwh9Hix68lbTfbd8eFoPsAnYhQT1+oCkuT\n3QW9Djk/fItb7bsjZNdWlB/7ut2yHdx/u2A5fvDmKUTfOIrtfj3t9jHCrQBZWdctx821MgC2NYRk\nEJGTfR55dZRZ0qFDhwrPO/1P4IEDBzBp0iTLcUpKCi5duoSUlBR0794djz76KBITE5GSklKlzu3b\ntw+3bt3C119/jalTp+Kbb75x+v64uDjExcVZjhMTExEeHg4vLy8sXLgQ+/btQ2ZmJqZMmYKMjAyo\nVI6Tqyr7g6K6k5WVxffhYvhO6seiICNObruGK7dNGB7shsUPtYDbnZ2nK3snycEmRGzORW5J6aiK\nSRSQcMkTu2MCoL6TED1l9w3cMDi3p9M7l9zweFggmt+JHt45WohMOyMRH/2qwsSerdD9zqanX54v\nxu7r+TbX1YXfdTJ8esMfSyNLk7kLDWYs3JwLQDqttrdAiTbtWkMlv/ffzPf870qHDtD7eMFt2d8h\nmO+8uxYh8Hvs/+Ant/qV3fpFmI+mQlZQGnyITTygePkNdGhaOlggPDAQ2L2l7PKcS9BFRcP9/AnJ\nY4RnZ6Hoy4/hceqwpe1fF77Ajqb3QxSkIzSPttXg+X4tJKN9rU0i1Cd/t4z03eWrlqNTR9f574bT\nAU9eXh5atmxpOf7uu+/Qt29fDBkyBAAwadIkvPvuu1X6cJVKZdmaomfPnvjll1+wcuVKzJo1y/KZ\nwcHBkj7c3cPL2rlz57BmzRrs3bsX69evR2RkJIKCghAUFASdToesrCyEhjou/U1E5GpCPBXIGB+I\nfJ0Zzdyqtuu0n5sc70b4YNKusqmtzAIjFmXcwhu9vbHxQrFNXZXYbh54sn0TAEBuiRkT/nfN8kvs\npl7EtNR8bHjYDyfzjXg7wzbYAQCDuXQ5/K5R/riuM2NWunS6rFczJd4f4FvJmFL1fXCqCKvPlE3z\nrDpzG6PbuCGqpRte/+mmzWo3ALilF7Hrdy2ig+3n/NQ1U88IaF9NgGrTKogad+j+OhuwDnYAQK1B\nyZx34Pbpu4Bohm7S3yA2LZsZMYZFQlku4JEfTYOicw/Lnl4AYPYLhKltZ8xu8wT+Uy7g6XH7Mn4O\nPAZ95DBLm49aZgl4Jd2QCwjzUyE9Vzoq5UrbSgBVCHg8PDxQUFD6D67RaMSBAwcwdepUy3mNRmNZ\nQVVdZrMZer0ebdq0QWBgIHbv3m3JC9JqtUhLS8P8+fNt7hNFEbGxsViwYAG8vb1hNpthMBgs5wwG\nA0ym2k+UIyKqaQqZAH9N9Yq3jWyjwRP3afDF+bLA5r3jRXjAX4WZVoFIDz8l/tHby5LY3MUX+Ecv\nL7x+qCyw+f43HVafKcbqM7dhKJeO00QhoLhcrtGJGwYsOVqIo9f1uKkva1fLS3OQOvlIq/PWpLf6\neOPH33W4UG4LhFdSC/BWXy98ctY23+WuTRdLXCbgAQBTj3CU9Kg4FQMAxJYhpdtL2HtGlzCIKnXZ\npqU38mw2PzX2fQirz5bgI21LDAqIxMTcspo93Xd9huJhDwPKipeeA6XJ7TYBjwslLANVWJYeFhaG\nNWvW4OjRo0hMTERRURGio6Mt5y9evOhw9MWeN998EwcOHEB2djZOnjyJefPmITU1FY8//jgEQcDU\nqVOxbNkybNmyBZmZmXjppZfg7u6O8ePH2zxrzZo18PHxQUxMDAAgIiIC+/btQ1paGj766CMolUoO\nxxPRn9KicB/JsmGzCEz84QbydWWBiEpWGohYr+J6qasH+lnVWZmRVoDjVtV0kwb64vF20mBh5dYj\nYQAAIABJREFUydFC7Lyik7T9I8yrVoMdAHBXyrByoHQE6bdiE6bskU6rlS/SCADfXdZCa2xkddtU\naphCH5A0WW9R8Wu3gXj9UGlS2D/bPg69UBZcy67lSEaIKmKvHo+rBTxOj/D84x//wLhx4xAVFQVR\nFDF27FiEhYVZzn/zzTeVJgaXl5OTgxdeeAG5ubnw8vJCaGgoUlJSLFNksbGxKCkpwezZs1FQUIDe\nvXtj48aN8PT0lDwnNzcXS5YskRQtDAsLw/Tp0zF58mR4eHggOTkZGo3rRO5ERHXFRy3D8v6+GP/9\ndYfXxIV5oauvbSAilwlYOdAXA77OlYzglPdYWw3GhGgwqLkae6/qkFNifyVWvwAVXgr1qN6XqKJ+\ngWq80s3DYdFFmQB8PtQPf9l9w9LfQoOIH37TYmSb6v2u0BpF7M/R4XSeHMflZSNJcpmA/kEqNKun\nLRaMPSOgOLLf7jlzsyD89XIAbhtLA9iLmgCsbjUU/+/Xst+nqq8/g2FANNCk4ndnvcUE4HpTWkJB\nQYHTIe3169dx8OBBeHl5YcCAAZb2goICrF+/Hv3798f9999fKx2lPw8myLoevhPXU9V3Mm1/Pj6z\nM6XzgL8S20fYLiUv74PMIsw5eNOmPUAjQ/rYAEvtne2/luDJ/92wuU4jF5A6JgD3edfdSi2tUcSD\nW3Jx5qbR5lxsNw/M6+ON2ekF+LDc/mTj22nw0YNNba6vTLHRjCFb83CqwPazAEAuANtH+KNPJVWJ\na4OQfw3ur9rOjADAz+GPoZ/mUUlbcg/gr8nPQdCWTYPqY56G/rFnK/2sHl/+gexyOVJ/6+aBBX28\nq9nzmlel8MvPzw8jRoyQBDsA4OPjg6lTpzLYISJyUW/18UYrd+kog9udnJqKgh0AeK6LOwYG2f6y\nfi/SR1JoMDpYg4l3kp7Le/MBrzoNdgDATSEgaaAvrBdedfZRIO5OPaJxIdLRnG2XtSipxrTWf7OK\nHQY7AGASgUUOkrxrm+jbDKYQ+/t2vaWSTncNaanGhLAW0D/ypKRduf1LCAWORwjvCrcK6PxcbErL\ntXpDRES1wkslw4oB0gBg3gPe6OBdeU6NTBDw/gBfSd7L5A5NMKK17fRPQrg3WnuUBUEPNlfj+S71\nU8m4l78Ks3qUpUHcTZq+u7S/X6BKkt902yji+yuOC/I5Yr3PlD0/5ephrqe9HY09I23aSvxa4BtZ\n2SpolQxYFukDQRBgiH4cZq+yIsOCXgvVZscbi9414T5psDuklW1tnvrkMOT29fWFTCbD1atXoVKp\n4OvrW+mSSEEQLPtZERGRa3mwhRrfPtIMW7JL0Ndf7XDrBXvaeCrwY0wAPjx1G6095HjOwXYM3ioZ\nfhjljxUni+CplOHlUA/I6nFPw7k9PdHGQ44T+QY8cV8T9PArG4WQCQLGhGjwn8yyaa1NF0sQE+L8\nn8vVYhPScqSrk2LauEEuCNh5RWuplH3LIOJ0gdFurlRtM/WMADZ/Imk7EBIpqaQ8pKUbWnncCQnc\nmsAw5v+gXlO2+kvx4zfQRz8OMSgYjgxpqcanUU2x76oOI1q7WWoxuQqHAc+cOXMgCAIUCoXkmIiI\nGq5+gWr0C6zeNgohngr8q2/lORn+GjnefMA1cjcEQcDEDo5HmB5tKw14dlzR4rbBLNk6oSJfXypB\n+XGbLh4mfDbYDwDwxPfXsKPcSrWfcvX1EvCYQzrC7NMMsoKyHdPfbdJbcs2jVsGv4aFRUO74ErLc\n3wGUbiyqSvkYulfedPg5wp0AckwVAsa65DDgKV/B2N4xERFRQ/eAvwqt3OWWzTGLjSJ2XtFiXFvb\nXCR7NltNZw1tVpa02ydAbRPw/KVTPUzvCQL0E16A2wcLAQA5vYdie7npLLUciG5tNf2kUEI//jm4\nrSyrfac8tAeG86dgvq9LnXS7ptXbbulERET1TSYIGBuiwfsny5awb7pY4lTAc6XIaFNsr3zAY12b\n5qfcmtuvq6qM/Yfhdqf7IRTeREJuIFBuVOvhlm7wtDOiZezzEExtPoc8+6ylTfP2dIjqcsFREw8Y\nBsfAED2hVvtfE5i0TEREf2rjrKZzvrusxQNf5Vh+Ijfn4K1fbsFkliYdf50tTXB+wF+JFm5l1/Rq\nppQkiZ+7ZcR1bf1V/RebBcEU0hGbrfptPZ1lIZNB/8QLkiZBr4WssKDsJ+cK1OtXQnb2eG11u8Yw\n4CEioj+1Xs2UkpVlRrE0OLn7k5lvROLRQiQek26ftOmitK7RWKvcFQ+lDKFWOTuH8upvlOfu59+d\nvgNKayQNC3a8msoU+gCMVtWa7VH8kup8J/Q6qJP/BffnhsFt8SygxPGWHzWJAQ8REf2pCYKAx5xY\nsbYko3R/MADILjTi5zzpFhvWAQ9gW5umPqe1gNLpuvKGB7vBo5IEbd2zs2Fq1bbCa+SnjzrXAZMR\nbknzoTzwPQSDHoqTP0O5fYNz994jBjxERPSnN/1+T/Twq3gFlVEs3QleZxKxxWqn+fAAVdmy7nKs\nqyvXZ8BjFkV8bdVv6+k8e0S/QJT8azWKVnyN28s3lf4kSOvyyLLPVj5SI4pQf7YMil+kW10oDu9z\n7gvcI6eSlrVaLTZt2oSOHTuid+/eld9ARETUgHipZNgz2h+/3jZBZyrLwzmUq8dLqWU7y2fmG7E4\n4xZ2/S7dGNVR4GCduPzLNQMMZtFmo9a6cDBXj9+Ly/Y6c1cIeLhVFUoUeHiXLcH38oW5eWvIrl4G\nULpsXX7uBEzd+zq8Xfn1Z1Du2WrTLv/1PIRrf0BsFuR8X6rBqREeNzc3xMbG4vhx109KIiIiqg5B\nENDaQ4EO3krLz8QO7njiPmkw8+7xIhy5VjadJQAOa8+08ZAjUFP2q7bYKOKk1W7zdcW6InR0sBua\nKKo/0WPq1ENyXNG0lmLPN1BvWu3wvPxoerX74Synv2n79u2Rk5NTm30hIiJyOYvCfSRbUFgt1kJE\noArNm9jfDV0QBPTxr/9pLZPZdhrOmemsCp/Z2bmAR37kANSfLK3wWYojB+6pL85wOuCZPXs2Pvzw\nQ5w8ebI2+0NERORSfNQyLO/v6/B8ZYGDTeKy1UotsygiLUeHswW1N/JzIEePnJKy6SxPpYChLe9t\nrytTJ+mG4bKLpwGddMm78McVuK2cB0Es+2xRqYJ2yizJdfJTRwBt7a7WcrrwYGpqKpo1a4ZBgwah\nb9++aNu2LTQa6UsWBAGJiYk13kkiIqL6NLSVG/6vYxN8dlb6S1kmADFtKg54KkpcNphFTPrhOnZe\n0UEuAO9E+NRKNeavLkj7/UhrN8smqtUlNg2A2b8FZHl3tp8wGSE/nwlT116Wa1TbN0DQl+U7iYIM\n2qmvw9RrAMzf/LfsXqMB8pOHYeo98J76VBGnA55Vq1ZZ/n96ejrS023n2xjwEBFRY/VWH2/s+k0n\nqWPTP1CFQAfTWXf19FNBKQMMdwY5LheZcLXYhOZN5Hj3WCF23tl+wiQCc9IL0DdAVaN7bmVc02NN\nljTgGVdD+12ZOvewBC1A6bSWJeDRaaFI/0FyvX7iy5agxtgzAqrvv7KcU2Sk1WrA4/SUVn5+fqU/\nN27cqLWOEhER1ScvlQwrBvhIqie/0NWj0vvcFAJ6Wi15/ylXj2PX9VicIS1mqDcDL+7Nh8E6Uaia\ndCYRU/flo9zCMzRvIsPge5zOuss6j0d2piyPR/HzXgglZVtYmL18YRg8puzesAjJvfKjaYDZjNrC\nOjxEREROerCFGzYPb4bnu7hj9UO+GF3JdNZd1tNa+//QYeq+fBjtxDXHbhjwztFC2xPV8PaRWzhV\nYJS0LY3wgVpeM8vibVZqnc8EDKVTdop92yTnjP2HAQqF5F7RrWzPMtnNfMgunqmRftlT5YBnz549\nWLBgAaZNm4azZ0s3FCsqKsL+/ftRUFBQyd1EREQN28Dmaizp5+P0juoAEB4grXfz0enbOJlvdHA1\nkHi0EBnX7m0116FcPZadKJK0PdW+CR5pXTPTWUDp/lzmpgGWY8Ggh+zCaQg5v0Fx6ojkWsOgEdKb\nFUqYuveRNh1Nq7G+WXM64CkpKcFjjz2GRx99FO+++y7Wrl2Lq1evAgBUKhWeeeYZJCcn11pHiYiI\nGirrpenWM1YjW7shoFy9HqMIvHSnqnN1lBhFvJSaL/mcFk1kSOjrXa3nOSQItsvTzxyFMnW7pM3U\nPhRiizY2txt7Wk1r1eLydKcDngULFiA1NRUffPABjh8/DlEs+1NUqVQYO3Ystm/fXsETiIiI/pxa\nuMvRyt1+cnOQRoYVA3zxboSPpD2zwIhFGbeq9XkLfrmJrJvSEaTlA3zho675TBabaa1TR6CwCngM\nAx+xe6/x/n4QhbLpNfnlcxBu5Fb4efKf90Gz4BWokxcCRc7/+Tj9zTdv3oznnnsO48ePt1mODgAd\nOnTApUuXnP5gIiKiPxPrejx3LetfGoiMbKOxqer83vEihKX8Ifl5dMc1nKmgZs+BP3RIOnlb0vaX\njk0wpIYSla1Zj/AoMn+B7Eae5VhUucEYPtj+zV4+MN/XVdIkz3A8rSXcyofbf+ZDfu4ElAd2QvX1\nZ0730+mA5/r16+jUqZPjTggCtFqtw/NERER/ZtaJywAwqUMTDA8uC0TsVXW+WGiS/Oz6XYfHdl7H\nTb3tiqYigxkvpeaj/ERYsIccC2p6KqscMbAVzN5NHZ439n0I0DjOdzL2jJQcKyoIeGTnTkIwlAV7\n8gunnO6n0wFPq1atcOaM4+zp9PR0tGvXzukPJiIi+jMZGCRNXG7lLsdCq0DERy3Dvyuo6nzXldsm\n/P2nmzbtb/58C5cKTZK2FQN84amsxUXZgmAzrVWeTbKyFZN1Hk/mLzYVm++S5f4ubTA4n9jt9J/A\n448/jk8//RRpaWWRl3Bn3u3jjz/G5s2b8dRTTzn9wURERH8moU2VeCnUHQKAAI0Mn0Y1hbfK9tfw\nw63cEB/mico2VF+bVYydv5YFBj/+rsVHp6VTWc93cceg5lXYEb2arKe17jIHtoK5Y/cK7zW3agtz\ns0DLsWDQlwY9dghWAY9QhYDH6UrLM2bMwOHDhzFq1Ci0b98egiBg7ty5uHHjBnJychAdHY2XXnrJ\n6Q8mIiL6s1nY1wdze3rBQylAJjiOaOb09MKLXT1wTVs2bWUSRUz64QbOlktGjj2Qj7SxgZAJwMup\n0tIw7TzleLO3V81/CTvMDkZ4DIMeASr4ngAAQYCxRwRUP2y2NMmP/wRTWKTNpTYjPOW2raiM0wGP\nSqXCl19+iS+//BKbN2+GIAgwGo3o0aMHxo0bhyeeeMIy4kNERET2edkZ1XF0nfW1SQN98fC3eZbl\n5leLzZhzsABqmSDZ8kIAsHKgL9xrcyqrHHOLNhA9vCCUWzUlymQwDoh26n5TaG+gXMAj++2S3etk\neVelDbUxwnPX448/jscff7yqtxEREdE96u2vwvTuHnjnWFlBwQ3nS2yueznUA/0Ca38qy0Img6lT\nDygO77M0me4Ph+jj59TtZqsaPbI/rti5yATBKuCpypSW06Hff//7Xy47JyIiqmdzenqhq6/j8YqO\n3gr8vVfdTGWVZ+g3RHr88GNO3yv6N4coKwtJZAXXAK10w1Mh/xoEk1V1akMtTGm9/PLLEAQBzZs3\nR0REBCIjIxEREYEuXbo4/WFERER0b9RyAf8Z6IvBW/Ns9uKSCaXTXhpF3aeYmPo8CN2kVyA/eRjG\nPg/C1O0B529WKCH6N4eQ85ulSfbHFZhDOpYdW+fvAKVL1EWx8jwhVCHgOXLkCPbv34/09HSkpaXh\nq6++giAI8PX1Rb9+/RAREYH+/fsjLCzM2UcSERFRNdzvp8Lsnp5IOCLdZHR6dw/09rdf4LDWCQIM\nw8bDMGx8tW43BwVDJgl4fpUEPNYrtCwMekBV+fSd0wFPSEgIQkJCMGnSJABAXl4eDhw4gLS0NHz/\n/ffYtm0bBEHA9evXnX0kERERVdOM+z3xvytaHMorLcTXw0+JOT3rfiqrppiDgoGj6ZZjwSqPxyZh\n+a6aDnjKu3HjBtLT05Geno4DBw7g0qVLkMlkuP/++6vzOCIiIqoipUzA19HNkHTyNsyiiKmhHlDL\nG+5qaXNQK8mx7I9fJcdC7m+wRzDo4cwWq04HPCkpKThw4AAOHDiAM2fOwM3NDb169cLw4cMxb948\n9O3bF+7u7s4+joiIiO5RE4UMM3t41nc3aoTYvLXk2DrgkeU6GOFxshaP06u0nn/+eXz22WcIDQ3F\nd999h8uXL+Pbb7/F3//+d0RFRVU52Fm6dCmioqIQHByM++67D0888QQyMzMl10ydOhU+Pj6Sn6FD\nh0quiY+PR0hICEJDQ7FhwwbJuW3btiE6OlqyszsRERG5HnOg9QjPldKE5LvHFeXwOMHpEZ5HH30U\n6enp2LhxI3bt2oXw8HD0798f/fv3R48ePSCX29/23pHU1FQ8++yz6NWrF0RRxMKFCzF27FgcPHgQ\nvr5l+4g89NBDSE5OthyrVGXJWNu2bUNKSgo2bdqE8+fP45VXXsGQIUPg5+eHwsJCxMfHY/369SyI\nSERE5OJE32YQ1W4Q7uyjJZTchnArH6J3U+B2IYTbt+zeV+NTWh9//DEA4NKlS5bVWp988gneeOMN\nuLu7o0+fPujfvz9mzZrl1PM2btwoOU5OTkbr1q2Rnp6ORx55xNKuVqsRGBhofTsA4OzZsxgwYADC\nwsIQFhaGuLg4ZGdnw8/PD/Pnz8eECRPQuXNnZ78iERER1RdBgDkoGPLsrLKmq79C9G7qOGEZqPkp\nrbvurtRavnw59u7di5UrV6JFixbYs2cPFi5cWNXHWRQVFcFsNsPHx0fSnpaWhvbt26N3796YNm0a\n8vLyLOe6deuGI0eOoKCgABkZGdBqtWjXrh0OHTqE1NRUzJw5s9r9ISIiorrlKHFZyHMwnQXnqy1X\naZVWQUEB0tLSLMnLx44dg8lkglKptNTiqa65c+eie/fu6Nu3r6Vt6NChGD16NNq0aYPLly/jrbfe\nQkxMDPbs2QO1Wo0hQ4ZgwoQJiIqKgkajwcqVK+Hu7o7Y2FgsXboU69atQ1JSEjQaDRYvXozw8HCH\nn5+VleXwHNU9vg/Xw3fievhOXBPfS/UFKd3RvNzxzdPH8XvLTgjIPI6WDu75Pfsibqm80KFDhwqf\nLRQUFDiV0RsZGYkzZ87AbDbD09MTffr0sVRb7t27N9Tq6u/ZER8fj40bN2L79u0ICQlxeN3Vq1fR\nvXt3rFq1CjExMXavSUxMxG+//YbnnnsOY8eOxb59+5CZmYlXXnkFGRkZkhwgck1ZWVmV/oNLdYvv\nxPXwnbgmvpd7o9i/E24flM0WGcP6Q/vqv6Be/Q6Ue7bavafklTdh6vNQ5c92thPt27fH008/jYiI\nCNx///2QyWpmB9a4uDhs3LgRW7durTDYAYDmzZujRYsWuHDhgt3z586dw5o1a7B3716sX78ekZGR\nCAoKQlBQEHQ6HbKyshAaGloj/SYiIqKaZXawNL3CKS19DU9pffbZZ85e6rTXXnsNmzZtwtatW9Gx\nY8dKr7927RquXr1qN4lZFEXExsZiwYIF8Pb2htlshsFgsJwzGAwwmUw1/h2IiIioZpgDpRNXQu7v\ngMnoeEk6UPPL0u86ffo0du7cicuXLwMAWrdujWHDhlV5NdSsWbPwxRdfYO3atfDx8UFOTg4AwN3d\nHR4eHigqKsLbb7+NmJgYBAYG4vLly5g/fz78/f0xatQom+etWbMGPj4+lqmuiIgIJCQkIC0tDSdO\nnIBSqeQwIxERkStz94TZyxeyW/kAAMFkhJDzG4TrOQ5vqfGkZVEUMWvWLKxevRqiKFqmtMxmM958\n80389a9/xZIlS5yuefPRRx8BAMaMGSNpf+211xAXFwe5XI7MzEx8/vnnuHnzJgIDAzFw4ECsXr0a\nnp7SqpK5ublYsmQJduzYYWkLCwvD9OnTMXnyZHh4eCA5ORkajcbZr0tERET1QAwKBu4EPACgOHkY\ngtns+AYnl6U7HfAsW7YMq1atwsSJE/HKK69YRkuysrKwYsUKrFq1CsHBwYiNjXXqeQUFBRWe12g0\nNrV6HAkICMDx48dt2mfMmIEZM2Y49QwiIiKqf+agVpCfPWY5lh//qeIbnBzhcTrzeM2aNYiJicGK\nFSvQpUsXKBQKKBQKdOnSBe+//z5GjRpVK3k+RERE9OdhDgqWHMtPHanwementJwOeK5cuYIHH3zQ\n4fkHH3wQV65ccXieiIiIqDLWxQcFqykrUWO1d2dNV1r29/fH0aNHHZ4/evQo/P39nX0cERERkQ3r\npek251uGSI5rfIRn3LhxWLNmDZYsWYJbt8o28CosLERiYiLWrVuHRx991NnHEREREdkQ/ZtDFByH\nJ+YWbaQNhhpOWo6Pj8eJEyewcOFCLFq0CAEBAQBKV0iZTCZERUUhLi7O2ccRERER2VKqIDYLclhs\n0NyyrbShppelazQabNq0Cd999x2+//57/PprafXD4cOHY/jw4YiOjnb2UUREREQOmZsHQ2Yn4BFV\nbjA3C5K01crmoQAwYsQIjBgxoqq3ERERETnFHNQKOHbQtj2gOWC9J6aTW0vUzIZYRERERDXEemn6\nXaJ/C4gq6Wbl9zzCM3r06Cp07c6HCgK2bNlS5fuIiIiI7hKtlqbfZfZvDiitR3juMWnZbDY7vU3E\nXaIoVul6IiIiImvmIPtL08WAFrYBz72O8Hz77bfO94yIiIiohoi+zSCq1DZFB80B1Z/SYg4PERER\nuRaZDOZA22kts90RnnustFy+uGBV3cu9RERERNaJy6IgQGwWBFFZwyM83bp1w/z585Gdne105y5f\nvow333wT3bp1c/oeIiIiImvWicuir3/p6E5NJy0vX74cCQkJeO+99xAWFoaoqCj07NkTISEh8PHx\ngSiKKCgoQHZ2NjIyMrB7924cOXIEHTt2xPvvv1/1b0ZERER0h80IT0Dz0v9T00nLY8aMwejRo7Ft\n2zasW7cOy5cvh16vt1m5JYoi3NzcMGTIEMyePRvDhw+v8uouIiIiovJMob0hyhUQTEYAgLF739IT\nCgVEmQyC2QwApf9rMgLyimspV3hWJpNh5MiRGDlyJHQ6HTIyMnD27Fnk5+cDAJo2bYpOnTqhZ8+e\nUCqV9/rdiIiIiACUrtTSTk+Acs9WmFu2hWHY+LKTShWg05Yd6/WA5h4CnvLUajXCw8MRHh5e5U4T\nERERVZWpex+YuvexPaFSSwMegx7QNKnwWVyWTkRERA2KaJXHIzixNJ0BDxERETUs1UhcZsBDRERE\nDYpNLR4ndkxnwENEREQNSzWqLTPgISIioobFaj+tGpvSKikpwaJFi7Br165q9YuIiIioptgkLTtR\nbdmpgEej0eDdd9/FlStXqtczIiIioppSm0nL3bp1w4ULF6rcJyIiIqKaJKqsl6XXYMDz+uuv49NP\nP8WOHTuq3jMiIiKimmKzgWjlAY/TlZbff/99+Pr64qmnnkKLFi0QEhICjUYjuUYQBGzYsMHZRxIR\nERFVnbLqSctOBzynT5+GIAho1ap0u/bLly/bXMNNQ4mIiKi2VafSstMBz/Hjx6veIyIiIqKaxkrL\nRERE1NiJVnV4nEladnqE566dO3di586dlimt1q1bIzo6GkOHDq3qo4iIiIiqziZpuQantLRaLZ55\n5hl8//33kMlkCAoKAgDs2rULq1atwsMPP4zPPvsMarW6kicRERER3YPanNJKSEjAzp07MWfOHFy4\ncAEnTpzAiRMncPHiRcydOxfff/893n777Sr3mYiIiKgqbKa0aqrSMgB89dVXmDx5MubOnQsvLy9L\nu6enJ+bMmYNJkybhyy+/dLqzS5cuRVRUFIKDg3HffffhiSeeQGZmpuQaURSRkJCAzp07IygoCCNH\njsSpU6ck18THxyMkJAShoaE2S+K3bduG6OhoiKLodL+IiIjIxdXmCE9eXh7CwsIcnu/Zsyfy8vKc\nfRxSU1Px7LPPYseOHdiyZQsUCgXGjh2L/Px8yzXLli3DihUrLPt4+fv7Y9y4cSgsLARQGtCkpKRg\n06ZNmDdvHqZNm4br168DAAoLCxEfH4/33nuPy+WJiIgakVqttNyyZUvs3bvX4fm9e/eiZcuWzj4O\nGzduxOTJk9G1a1eEhoYiOTkZ165dQ3p6OoDS0Z2kpCS8+uqrGDNmDLp27YqkpCQUFRUhJSUFAHD2\n7FkMGDAAYWFhGD9+PDw9PZGdnQ0AmD9/PiZMmIDOnTs73SciIiJqAGpzhGfixIn4+uuv8be//Q2n\nTp2CwWCAwWDAqVOnMG3aNGzduhWTJ0+ucp/vKioqgtlsho+PDwAgOzsbOTk5GDx4sOUajUaDyMhI\nHDx4EEDp/l5HjhxBQUEBMjIyoNVq0a5dOxw6dAipqamYOXNmtftDRERELqoaAY/Tq7RmzJiB7Oxs\nrF27FuvWrbNME4miCFEU8fTTT2P69OlV63A5c+fORffu3dG3b18AQE5ODgDA399fcp2/vz+uXr0K\nABgyZAgmTJiAqKgoaDQarFy5Eu7u7oiNjcXSpUuxbt06JCUlQaPRYPHixQgPD3f4+VlZWdXuO9U8\nvg/Xw3fievhOXBPfS+1zz8lDx3LH2ls3K73H6YBHJpNh+fLlePHFF7Fz5078+uuvAIDg4GAMGzYM\noaGhVe7wXfHx8UhPT8f27dshl8urdG9cXBzi4uIsx4mJiQgPD4eXlxcWLlyIffv2ITMzE1OmTEFG\nRgZUVvN+d3Xo0KHa/aealZWVxffhYvhOXA/fiWvie6kbMoVZcqyRy1BSyT1OBTxarRabNm1Cx44d\n0bt373sKbqzFxcVh48aN2Lp1K0JCQiztgYGBAEqTpYODgy3teXl5CAgIsPusc+fOYc2aNdi7dy/W\nr1+PyMhIBAUFISgoCDqdDllZWTXadyIiIqp71am07FQOj5ubG2JjY2t8P63XXnsNX32MRqgEAAAc\nhklEQVT1FbZs2YKOHTtKzrVp0waBgYHYvXu3pU2r1SItLc3u1JQoioiNjcWCBQvg7e0Ns9kMg8Fg\nOWcwGGAymWq0/0RERFQParPScvv27S15NTVh1qxZ+OKLL7B27Vr4+PhYnu3u7g4PDw8IgoCpU6di\n6dKl6NChA9q3b4/ExES4u7tj/PjxNs9bs2YNfHx8EBMTAwCIiIhAQkIC0tLScOLECSiVSg4zEhER\nNQa1mbQ8e/ZszJ49G6NGjaqRaaGPPvoIADBmzBhJ+2uvvWbJyYmNjUVJSQlmz56NgoIC9O7dGxs3\nboSnp6fkntzcXCxZsgQ7duywtIWFhWH69OmYPHkyPDw8kJycDI1Gc8/9JiIiovplO6VV+QiPUFBQ\n4FQZ4pkzZ2L//v3IyspC37590bZtW5sAQhAEJCYmVqHLRLaY9Od6+E5cD9+Ja+J7qSN6HTyeH245\nFJVK3P7o+wpvcXqEZ9WqVZb/n56ebikQWB4DHiIiIqp1SutKy4ZKb3E64Cm/5QMRERFRvREEiEql\nU4HOXU6t0tJqtVi/fj0OHz5c7b4RERER1RjrxOVK1OuydCIiIqLqEJXqyi8qx+m9tGp6WToRERFR\ntdXGCA9Quiz9ww8/xMmTJ6vcJyIiIqIaparaCI/TScupqalo1qwZBg0axGXpREREVK/EKo7wcFk6\nERERNTy1FfBwWToRERG5Cutqy5VxOoeHiIiIyGXUZNLyrl27kJubK2nT6+1v0HX+/HnL/lhERERE\ntaomA57x48fjxx9/tBzfuHEDQUFBkra7Dh8+jDlz5lTpw4mIiIiqo6pJyxUGPKJou6+ovTYiIiKi\nOlVbdXiIiIiIXAWTlomIiKjx4wgPERERNXo1XWn50qVLll3Sb926BQDIysqCh4eH5LqLFy9W6YOJ\niIiIqqvGKy0nJCQgISFB0mZvNZYoihAEoUofTkRERFQtNRnwrFix4p76QkRERFQbRGUNTmlNnDjx\nnjpDREREVCuYtExERESNnooBDxERETVyNVppmYiIiMglMeAhIiKixo6VlomIiKjx4wgPERERNXpV\nXJbOgIeIiIgaHJGrtIiIiKjR45QWERERNXZVrbTMgIeIiIgaHo7wEBERUaPHgIeIiIgaPYUCosz5\nMIYBDxERETVMVRjlYcBDREREDVMVqi3Xa8Czf/9+PPnkk+jSpQt8fHywbt06yfmpU6fCx8dH8jN0\n6FDJNfHx8QgJCUFoaCg2bNggObdt2zZER0dDFMVa/y5ERERUt6qygaiiFvtRqdu3b6Nr16546qmn\n8OKLL9q95qGHHkJycrLlWFWu0NC2bduQkpKCTZs24fz583jllVcwZMgQ+Pn5obCwEPHx8Vi/fj0E\nQaj170JERER1rKEEPMOGDcOwYcMAAC+99JLda9RqNQIDA+2eO3v2LAYMGICwsDCEhYUhLi4O2dnZ\n8PPzw/z58zFhwgR07ty51vpPRERE9acqtXhcPocnLS0N7du3R+/evTFt2jTk5eVZznXr1g1HjhxB\nQUEBMjIyoNVq0a5dOxw6dAipqamYOXNmPfaciIiIalVDGeGpzNChQzF69Gi0adMGly9fxltvvYWY\nmBjs2bMHarUaQ4YMwYQJExAVFQWNRoOVK1fC3d0dsbGxWLp0KdatW4ekpCRoNBosXrwY4eHhDj8r\nKyurDr8ZVYbvw/XwnbgevhPXxPdSd9qbzPB08lqXDngee+wxy/8PDQ1Fz5490b17d+zYsQMxMTEA\ngLi4OMTFxVmuS0xMRHh4OLy8vLBw4ULs27cPmZmZmDJlCjIyMiQ5QOV16NChdr8MOS0rK4vvw8Xw\nnbgevhPXxPdSt9y8vJ2+1qUDHmvNmzdHixYtcOHCBbvnz507hzVr1mDv3r1Yv349IiMjERQUhKCg\nIOh0OmRlZSE0NLSOe01ERES1orHW4bl27RquXr1qN4lZFEXExsZiwYIF8Pb2htlshsFgsJwzGAww\nmUx13WUiIiKqJaKDWRt76nWEp6ioyDJaYzabceXKFRw7dgy+vr7w9fXF22+/jZiYGAQGBuLy5cuY\nP38+/P39MWrUKJtnrVmzBj4+PpaproiICCQkJCAtLQ0nTpyAUqnkMCMREVFj0lCSlo8cOYLRo0db\njhMSEpCQkICnnnoKS5cuRWZmJj7//HPcvHkTgYGBGDhwIFavXg1PT2mKUm5uLpYsWYIdO3ZY2sLC\nwjB9+nRMnjwZHh4eSE5OhkajqbPvRkRERLWsCsvS6zXgGThwIAoKChye37hxo1PPCQgIwPHjx23a\nZ8yYgRkzZlS7f0REROS6qlJpuUHl8BARERFZMOAhIiKixk5sKJuHEhEREVUbR3iIiIio0eMIDxER\nETV2TFomIiKixo8BDxERETV2Vam0zICHiIiIGiaO8BAREVGjV4VKywx4iIiIqEFi0jIRERE1fgx4\niIiIqLFjpWUiIiJq/DjCQ0RERI0eR3iIiIiosWPSMhERETV+DHiIiIio0WPAQ0RERI2eIEBUKp26\nlAEPERERNVxOVltmwENEREQNlrOJywx4iIiIqOFiwENERESNnpO1eBjwEBERUYPFKS0iIiJq/Ji0\nTERERI2dqOIIDxERETV2nNIiIiKiRo8BDxERETV2TFomIiKixo8BDxERETV2IuvwEBERUaPHER4i\nIiJq9DjCQ0RERI0dk5aJiIio8WsIAc/+/fvx5JNPokuXLvDx8cG6desk50VRREJCAjp37oygoCCM\nHDkSp06dklwTHx+PkJAQhIaGYsOGDZJz27ZtQ3R0NERRrPXvQkRERHVPbAhbS9y+fRtdu3bF22+/\nDY1GY3N+2bJlWLFiBRYtWoRdu3bB398f48aNQ2FhIYDSgCYlJQWbNm3CvHnzMG3aNFy/fh0AUFhY\niPj4eLz33nsQBKFOvxcRERHVkYYwwjNs2DC88cYbGDNmDGQyaVdEUURSUhJeffVVjBkzBl27dkVS\nUhKKioqQkpICADh79iwGDBiAsLAwjB8/Hp6ensjOzgYAzJ8/HxMmTEDnzp3r/HsRERFRHWnoe2ll\nZ2cjJycHgwcPtrRpNBpERkbi4MGDAIBu3brhyJEjKCgoQEZGBrRaLdq1a4dDhw4hNTUVM2fOrK/u\nExERUR1wNmlZUcv9qLacnBwAgL+/v6Td398fV69eBQAMGTIEEyZMQFRUFDQaDVauXAl3d3fExsZi\n6dKlWLduHZKSkqDRaLB48WKEh4c7/LysrKza+zJUZXwfrofvxPXwnbgmvpe65Zl3De2duM5lAx5n\nxcXFIS4uznKcmJiI8PBweHl5YeHChdi3bx8yMzMxZcoUZGRkQOVg6KtDhw511WWqRFZWFt+Hi+E7\ncT18J66J76XuyUy3nbrOZQOewMBAAEBeXh6Cg4Mt7Xl5eQgICLB7z7lz57BmzRrs3bsX69evR2Rk\nJIKCghAUFASdToesrCyEhobWSf+JiIioDjSEpOWKtGnTBoGBgdi9e7elTavVIi0tze7UlCiKiI2N\nxYIFC+Dt7Q2z2QyDwWA5ZzAYYDKZ6qz/REREVPtE/+bQTXy50uvqdYSnqKgIFy5cAACYzWZcuXIF\nx44dg6+vL4KDgzF16lQsXboUHTp0QPv27ZGYmAh3d3eMHz/e5llr1qyBj48PYmJiAAARERFISEhA\nWloaTpw4AaVSyWFGIiKiRkb08oVh+OOVXlevAc+RI0cwevRoy3FCQgISEhLw1FNPISkpCbGxsSgp\nKcHs2bNRUFCA3r17Y+PGjfD09JQ8Jzc3F0uWLMGOHTssbWFhYZg+fTomT54MDw8PJP//9u49qMo6\nj+P4Wy6FuYPHCA4jFxVQCDLX2El2U3clW3XJlLgqm6NG5qX1BqbWBolUkETaTpu4xyTMFEVxtVBr\nsm25eNvaZp3ppjLVqoHEBAIqxoH9w+FMJ1AOyQocP6+ZM6O/5/c8z+8532HO5/yey8nJafdZPyIi\nImL/+tTU1OgxxNKj6KK/nkc16XlUk55Jdem5euw1PCIiIiJdRYFHRERE7J4Cj4iIiNg9BR4RERGx\newo8IiIiYvcUeERERMTuKfCIiIiI3VPgEREREbunwCMiIiJ2T4FHRERE7J4Cj4iIiNg9/ZaWiIiI\n2D3N8IiIiIjdU+ARERERu6fAIyIiInZPgUdERETsngKPiIiI2D0FHhEREbF7dhd4SktLiY+P5847\n78RgMLBlyxar5S0tLbzwwgsEBQXh6elJREQEn332mVWfxsZGli1bhp+fHwMHDiQ+Pp4zZ87cyMOw\na2azmfT0dO6++26MRiN333036enpNDU1WfrYUifpWhUVFcydOxd/f3+MRiOjRo2ipKTEslw16V7Z\n2dkYDAaWLVtmaVNNbrzs7GzGjRuHj48P/v7+xMXF8emnn1r1UV16JrsLPA0NDQQHB5ORkUHfvn3b\nLF+3bh2vvvoqmZmZHDx4EHd3dyIjI6mrq7P0WblyJXv37mXjxo0UFRVRV1dHXFwcZrP5Rh6K3Vq7\ndi0mk4nMzEyOHj1KRkYGJpOJ7OxsSx9b6iRdp6amhgkTJtDS0sL27ds5cuQIL774Iu7u7pY+qkn3\nOXbsGLm5uYSEhFi1qyY3XklJCY8++igHDhxgz549ODk5MXXqVL7//ntLH9WlZ7LrBw96eXnx4osv\nkpCQAFxJ3UFBQTz22GMkJycDcPHiRYYOHcrq1auZNWsWtbW1BAQE8OqrrxIbGwvA6dOnGT58OAUF\nBdx///3ddjz2Ii4ujgEDBrB+/XpL29y5c/n+++/Jz8+3qU7StdLS0igtLeXAgQPtLldNuk9tbS2/\n/e1veeWVV8jMzCQ4OJg1a9aoJj1EfX09vr6+bNmyhUmTJqkuPZjdzfBcy9dff01lZSXh4eGWtr59\n+/Kb3/yGI0eOAPDJJ5/www8/WPXx9vYmMDDQ0keuT1hYGCUlJXz55ZcAfP755xQXF/PAAw8AttVJ\nutY777xDaGgos2bNIiAggNGjR7NhwwZaWq58H1JNus/ixYuZMmUKY8eOtWpXTXqG+vp6mpubMRgM\ngOrSkzl19wBupMrKSgCrafrW/3/77bcAnDt3DkdHR9zc3Nr0OXfu3I0ZqJ1bvHgx9fX1jBo1CkdH\nR5qamkhOTiYxMRGwrU7Stb766is2btzI/PnzWbx4McePH2f58uUAzJkzRzXpJm+88Qbl5eVs2LCh\nzTLVpGdYsWIFw4cP59577wVUl57spgo80jPs2rWLbdu2YTKZCAoK4vjx46xYsQJfX19mzJjR3cO7\nKTU3NzNy5EhSU1MBGDFiBOXl5ZhMJubMmdPNo7s5nThxgrS0NPbv34+zs3N3D0fa8dRTT3H48GH2\n79+Po6Njdw9HOnBTndIyGo0AVFVVWbVXVVXh4eEBgIeHB2azmerq6qv2keuTkpLCE088QVRUFCEh\nIcTHx7NgwQJefvllwLY6SdcyGo0EBgZatQ0bNozTp09bloNqciMdPXqU6upqwsLCcHNzw83NjdLS\nUkwmE25ubtx+++2AatJdVq5cyc6dO9mzZw+DBw+2tOtvpee6qQLPoEGDMBqNfPDBB5a2S5cucejQ\nIUaNGgXAL3/5S5ydna36nDlzhi+++MLSR67PhQsX2nwbcnR0pLm5GbCtTtK1wsLCOHnypFXbyZMn\n8fHxAVST7hAREUFZWRnFxcWW18iRI4mKiqK4uJiAgADVpJssX77cEnaGDRtmtUx/Kz2X44oVK57t\n7kF0pfr6ej7//HMqKyvZvHkzwcHBuLq6cvnyZfr374/ZbGbt2rX4+/tjNpt5+umnqaysZO3atdx6\n6624uLhQUVGByWQiJCSE2tpalixZgqurK6tWrcLB4abKiP8XX3zxBfn5+QQEBODs7ExxcTGrV6/m\n4Ycf5v7776dPnz4d1km6lre3N5mZmTg4OODp6cmHH35Ieno6S5YsITQ0VDXpBi4uLri7u1u9duzY\nga+vLwkJCapJN0lOTmbbtm3k5ubi7e1NQ0MDDQ0NANxyyy2qSw9md7elFxcXM3ny5Dbt06ZN47XX\n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\nRERExO79DwijiAmnRdWhAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f35412d86d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the relationship between K (HIGH TO LOW) and both TRAINING ERROR and TESTING ERROR.\n",
    "ax = df.plot();\n",
    "plt.xlabel('Value of K for KNN');\n",
    "plt.ylabel('Error (lower is better)')\n",
    "ax.yaxis.set_major_formatter(FuncFormatter(lambda y, _: '{:.0%}'.format(y)));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "- **Training error** decreases as model complexity increases (lower value of K).\n",
    "- **Testing error** is minimized at the optimum model complexity.\n",
    "\n",
    "Evaluating the training and testing error is important. For example:\n",
    "\n",
    "- If the training error is much lower than the test error, then our model is likely overfitting. \n",
    "- If the test error starts increasing as we vary a hyperparameter, we may be overfitting.\n",
    "- If either error plateaus, our model is likely underfitting (not complex enough)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### KNN & Cross Validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "\n",
    "# using 10% hold out for testing AFTER cross validation\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=99, test_size=.1) \n",
    "\n",
    "# range of neighbors to test:\n",
    "neighbors = range(1, 101)\n",
    "\n",
    "# empty dict that will hold cv scores\n",
    "cv_scores = {}\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for k in neighbors:\n",
    "    knn = KNeighborsClassifier(n_neighbors=k)\n",
    "    score = np.mean(cross_val_score(knn, X_train, y_train, cv=10, scoring='accuracy'))\n",
    "    cv_scores[k] = score\n",
    "    \n",
    "cv_scores = pd.Series(cv_scores)\n",
    "best_k = cv_scores.idxmax()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.270833333333\n"
     ]
    }
   ],
   "source": [
    "# Calculate testing error.\n",
    "knn = KNeighborsClassifier(n_neighbors=best_k)\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "y_pred_class = knn.predict(X_test)\n",
    "testing_accuracy = accuracy_score(y_test, y_pred_class)\n",
    "testing_error = 1 - testing_accuracy\n",
    "\n",
    "print testing_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f354139b7d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = cv_scores.plot()\n",
    "plt.xlabel('Value of K for KNN');\n",
    "plt.ylabel('Accuracy (higher is better)')\n",
    "ax.yaxis.set_major_formatter(FuncFormatter(lambda y, _: '{:.0%}'.format(y)))\n",
    "plt.axvline(best_k, c='g');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Automation: `GridSearchCV`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/instructor/anaconda2/lib/python2.7/site-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n",
      "/home/instructor/anaconda2/lib/python2.7/site-packages/sklearn/grid_search.py:43: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.\n",
      "  DeprecationWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=10, error_score='raise',\n",
       "       estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=5, p=2,\n",
       "           weights='uniform'),\n",
       "       fit_params={}, iid=True, n_jobs=1,\n",
       "       param_grid={'n_neighbors': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]},\n",
       "       pre_dispatch='2*n_jobs', refit=True, scoring='accuracy', verbose=0)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.grid_search import GridSearchCV\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=99, test_size=.1) \n",
    "\n",
    "knn = KNeighborsClassifier()\n",
    "\n",
    "# set up dictionary with lists of parameter value to test\n",
    "param_grid = {'n_neighbors': neighbors}\n",
    "\n",
    "cv = GridSearchCV(knn, param_grid, scoring='accuracy', cv=10)\n",
    "cv.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[mean: 0.58837, std: 0.05691, params: {'n_neighbors': 1},\n",
       " mean: 0.61628, std: 0.04106, params: {'n_neighbors': 2},\n",
       " mean: 0.62791, std: 0.04498, params: {'n_neighbors': 3},\n",
       " mean: 0.63953, std: 0.04286, params: {'n_neighbors': 4},\n",
       " mean: 0.65581, std: 0.06286, params: {'n_neighbors': 5}]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv.grid_scores_[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=14, p=2,\n",
       "           weights='uniform')"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_model = cv.fit(X_train, y_train)\n",
    "cv.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'n_neighbors': 14}"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Making Predictions on Out-of-Sample Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "Given the statistics of a (truly) unknown NBA player, how do we predict his position?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2])"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# Instantiate the model with the best-known parameters.\n",
    "knn = KNeighborsClassifier(n_neighbors=cv.best_params_['n_neighbors'])\n",
    "\n",
    "# Re-train the model with X and y (not X_train and y_train). Why?\n",
    "knn.fit(X, y)\n",
    "\n",
    "# Make a prediction for an out-of-sample observation.\n",
    "knn.predict(np.array([2, 1, 0, 1, 2]).reshape(1, -1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2])"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# or: \n",
    "best_model.predict(np.array([2, 1, 0, 1, 2]).reshape(1, -1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "What could we conclude?\n",
    "\n",
    "- When using KNN on this data set with these features, the **best value for K** is likely to be around 14.\n",
    "- Given the statistics of an **unknown player**, we estimate that we would be able to correctly predict his position about 74% of the time."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"standardizing-features\"></a>\n",
    "## Standardizing Features\n",
    "---\n",
    "\n",
    "There is one major issue that applies to many machine learning models: They are sensitive to feature scale. \n",
    "\n",
    "> KNN in particular is sensitive to feature scale because it (by default) uses the Euclidean distance metric. To determine closeness, Euclidean distance sums the square difference along each axis. So, if one axis has large differences and another has small differences, the former axis will contribute much more to the distance than the latter axis.\n",
    "\n",
    "This means that it matters whether our feature are centered around zero and have similar variance to each other."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "In the case of KNN on the iris data set, imagine we measure sepal length in kilometers, but we measure sepal width in millimeters. Our data will show variation in sepal width, but almost no variation in sepal length.\n",
    "\n",
    "Unfortunately, KNN cannot automatically adjust to this. Other models tend to struggle with scale as well, even linear regression, when you get into more advanced methods such as regularization.\n",
    "\n",
    "Fortunately, this is an easy fix."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"use-standardscaler-to-standardize-our-data\"></a>\n",
    "### Use `StandardScaler` to Standardize our Data\n",
    "\n",
    "StandardScaler standardizes our data by subtracting the mean from each feature and dividing by its standard deviation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "#### Separate feature matrix and response for scikit-learn."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# Create feature matrix (X).\n",
    "feature_cols = ['ast', 'stl', 'blk', 'tov', 'pf']\n",
    "\n",
    "X = nba[feature_cols]\n",
    "y = nba.pos_num  # Create response vector (y)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Create the train/test split.\n",
    "\n",
    "Notice that we create the train/test split first. This is because we will reveal information about our testing data if we standardize right away."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=99)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Instantiate and fit `StandardScaler`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(X_train)\n",
    "X_train = scaler.transform(X_train)\n",
    "X_test = scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "# save one line:\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=99) \n",
    "\n",
    "X_train = scaler.fit_transform(X_train)\n",
    "X_test = scaler.transform(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "#### Fit a KNN model and look at the testing error.\n",
    "Can you find a number of neighbors that improves our results from before?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.725"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn = KNeighborsClassifier(n_neighbors=best_k)\n",
    "knn.fit(X=X_train, y=y_train)\n",
    "float((knn.predict(X_test) == y_test).sum())/len(y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "### Scaler & Cross Validation: Pipeline & GridSearch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24    0.664524\n",
      "23    0.656349\n",
      "17    0.656190\n",
      "21    0.653571\n",
      "19    0.653492\n",
      "dtype: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Pipeline(steps=[('standardscaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('kneighborsclassifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=100, p=2,\n",
       "           weights='uniform'))])"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.pipeline import make_pipeline\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=99)\n",
    "\n",
    "# range of neighbors to test:\n",
    "neighbors = range(1, 101)\n",
    "\n",
    "# empty dict that will hold cv scores\n",
    "cv_scores = {}\n",
    "\n",
    "# perform 10-fold cross validation\n",
    "for k in neighbors:\n",
    "    pipeline = make_pipeline(StandardScaler(), KNeighborsClassifier(n_neighbors=k))\n",
    "    cv_scores[k] = np.mean(cross_val_score(pipeline, X=X_train, y=y_train, cv=10))\n",
    "\n",
    "print pd.Series(cv_scores).sort_values(ascending=False).head()\n",
    "pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pipeline(steps=[('standardscaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('kneighborsclassifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=5, p=2,\n",
       "           weights='uniform'))])"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "# combine scaler with model\n",
    "scaler = StandardScaler()\n",
    "knn = KNeighborsClassifier()\n",
    "\n",
    "pipeline = make_pipeline(StandardScaler(), KNeighborsClassifier())\n",
    "pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=10, error_score='raise',\n",
       "       estimator=Pipeline(steps=[('standardscaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('kneighborsclassifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=5, p=2,\n",
       "           weights='uniform'))]),\n",
       "       fit_params={}, iid=True, n_jobs=1,\n",
       "       param_grid={'kneighborsclassifier__n_neighbors': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]},\n",
       "       pre_dispatch='2*n_jobs', refit=True, return_train_score=True,\n",
       "       scoring='accuracy', verbose=0)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# define parameter grid to search - need to reference pipeline 'step'\n",
    "param_grid = {'kneighborsclassifier__n_neighbors': list(range(1, 101))}\n",
    "\n",
    "cv = GridSearchCV(pipeline, param_grid, scoring='accuracy', cv=10)\n",
    "cv.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pipeline(steps=[('standardscaler', StandardScaler(copy=True, with_mean=True, with_std=True)), ('kneighborsclassifier', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
       "           metric_params=None, n_jobs=1, n_neighbors=24, p=2,\n",
       "           weights='uniform'))])"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'kneighborsclassifier__n_neighbors': 24}"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "accuracy_score(y_true=y_test, y_pred=cv.best_estimator_.predict(X_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "<a id=\"comparing-knn-with-other-models\"></a>\n",
    "## Comparing KNN With Other Models\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "source": [
    "**Advantages of KNN:**\n",
    "\n",
    "- It's simple to understand and explain.\n",
    "- Model training is fast.\n",
    "- It can be used for classification and regression (for regression, take the average value of the K nearest points!).\n",
    "- Being a non-parametric method, it is often successful in classification situations where the decision boundary is very irregular.\n",
    "\n",
    "**Disadvantages of KNN:**\n",
    "\n",
    "- It must store all of the training data.\n",
    "- Its prediction phase can be slow when n is large.\n",
    "- It is sensitive to irrelevant features.\n",
    "- It is sensitive to the scale of the data.\n",
    "- Accuracy is (generally) not competitive with the best supervised learning methods."
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
